--- Página 1 ---
Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables (Parte 2) SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 2 ---
TécnicasdeconstruccióndeMáquinasdeTuring:memoriaadicional,pistas SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 3 ---
UnproblemaPROBLEMA(x)óPROBLEMAconstade: UnconjuntoX deentradas.UnelementoxX sellamaunaentrada. UnconjuntoY desolución.UnelementoyY sellamaunasolución. UnaaplicaciónF:X2Y queasignaacadaentradaxX unconjuntoAY SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 4 ---
UnproblemaPROBLEMA(x)óPROBLEMAconstade: UnconjuntoX deentradas.UnelementoxX sellamaunaentrada. UnconjuntoY desolución.UnelementoyY sellamaunasolución. UnaaplicaciónF:X2Y queasignaacadaentradaxX unconjuntoAY Búsquedadecaminosengrafosdirigidos: EntradasX:conjuntoformadoporlastripletas(G,ns,nl),dondeG esungrafo ConjuntoY:listadenodos(n1,...,nk) F(G,ns,nl)eselconjuntodelaslistasdenodos(n1,...,nk)talesque n1ns,nknl ytodaslasparejas(ni,ni1)seanarcosdeG. SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 5 ---
¿Qué es un algoritmo? En esta asignatura vamos a considerar dos conceptos que son equivalentes: Un programa en Phyton (Ph) bien escrito sintácticamente y la función principal (más adecuados para una resolución efectiva de problemas). Una Máquina de Turing (MT) que definiremos en el siguiente tema (más adecuadas para el razonamientos teórico-matemáticos). Un algoritmo ALG resuelve un problema PROBLEMA(x) cuando el argumento de dicho algoritmo es un elemento x X y ALG(x) es un y F(x) o dice No hay Solución si F(x)0/. SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 6 ---
alfabeto (Problema Computacional), aunque al hablar de un SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 7 ---
que a esa entrada le corresponde una salida especial: NO. de la codificación elegida (siempre que ésta sea razonable). cada entrada x, la codificación de x, se denotará como x (el elemento entre ángulos). SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 8 ---
Grafo: a,b b,d c,d a,c d,e SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 9 ---
Grafo: a,b b,d c,d a,c d,e Camino: a,b,d,e SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 10 ---
Grafo: a,b b,d c,d a,c d,e Ciclo: a,b,d,c SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 11 ---
Grafo dirigido: a,b b,d c,d a,c d,e SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 12 ---
Grafo con pesos: a,b,7 b,d,3 c,d,4 a,c,2 d,e, SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 13 ---
Problemas de Búsqueda: Son los problemas genéricos cuando F(x) puede ser vacío o contener varios elementos: Para una que cumpla una relación con x cuando este exista y decir NO cuando F(x)0/. Ejemplo: dado un grafo no dirigido Problemas de Decisión: Son aquellos en los que las soluciones son Y {SI,NO} y cada entrada x tiene una única solución. Ejemplo: dado un grafo determinar si tiene un circuito Problemas de Optimización: La solución optimiza (minimiza o maximiza) una función definida sobre un conjunto de soluciones factibles asociadas a la entrada. Ejemplo: el Problemas de función: Cada entrada x tiene siembre una y sólo una solución: F(x) tiene un solo elemento. Por ejemplo, SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 14 ---
problema tiene asociado un problema de decisión: Problemas de umbral para problemas de optimización: Los mínimo. Ejemplo: dado un caso del problema del viajante de Problemas de existencia para problemas de búsqueda: Dado un búsqueda: Dado x y una posible solución y determinar si y es SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 15 ---
Camino mínimo: Dado un grafo y dos nodos, encontrar un (problema de optimización). Búsqueda de caminos: Dado un grafo y dos nodos, exista, decir NO en caso contrario. Existencia de Caminos: Dado un grafo y dos nodos, determinar si existe un camino entre ellos (problema de existencia). Umbral del camino mínimo: Dado un grafo, dos nodos, y un longitud menor o igual a K (problema de umbral). Problema de comprobación: Dado un grafo, dos nodos, y (problema de comprobación). SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 16 ---
entradas que tienen respuesta SI: L(PROBLEMA(x)){x A : PROBLEMA(x)SI}. problema de decisión: dada x A determinar si x L. SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 17 ---
Palabras de A mismo saco que los casos en los que la respuesta es NO. La identificación de las codificaciones correctas (palabras que corresponden realmente a un ejemplo del problema) se considera SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 18 ---
UnproblemadedecisiónUnacodificaciónProblemaComputacionalSINO ProblemaComputacionalSINOLenguaje La identificación de las codificaciones correctas (palabras que corresponden realmente a un ejemplo del problema) se computacional (en todos los ejemplos el reconocimiento de una entrada correcta se puede realizar de forma eficiente). SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 19 ---
PROBLEMA, es el problema CPROBLEMA que intercambia las salidas SI y N0 o de forma más precisa PROBLEMA(x)SICPROBLEMA(x)NO. complementario del lenguaje del lenguaje asociado a PROBLEMA: L(CPROBLEMA)L(PROBLEMA) SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 20 ---
PROBLEMA, es el problema CPROBLEMA que intercambia las salidas SI y N0 o de forma más precisa PROBLEMA(x)SICPROBLEMA(x)NO. complementario del lenguaje del lenguaje asociado a PROBLEMA: L(CPROBLEMA)L(PROBLEMA) Nota: Cuando hablamos de problemas genéricos, esto no es del todo exacto: ya que las codificaciones incorrectas estarán englobadas con el SI en el lenguaje complementario o problema contrario, pero nosotros genéricos sin tener esto en cuenta: en realidad no importa como se traten SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 21 ---
Ejemplo: Isomorfismo de subgrafos X: Datos Dos grafos G (V ,E ) y G (V ,E ) Y: SI,NO (Problema de Decisión) Relación: Respuesta SI corresponde a ¿Contiene G un subgrafo isomorfo a G ? Es decir, existe un subconjunto VV y un subconjunto de aristas EE tal que EVV y existe una aplicación biyectiva f :V V de tal manera que se verifica (u,v)E (f(u),f(v))E SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 22 ---
SupongamosunalfabetoA{a1,...,an}.Podemosestablecerunacorrespondencia waik ...,ai1 ,entonceselnúmerodew quedenotaremoscomoN(w)esk j1ij.nj1, siendoN(ε)0. SiA{0,1,2},N(ε)0,N(0)1,N(1)2,N(2)3,N(202)3133 DadounalfabetoA{a1,...,an},Simesunnúmeronatural,siempresepuede encontrarunacadena,quedenotaremoscomoC(m)ocomowm cuyacodificaciónsea Sim0,C(m)ε Sim0,sea R(m,n) sinnodivideam i (cid:26) n sindivideam [m/n] sinnodivideam p (cid:26) [m/n]1 sindivideam dondeR(m,n)eselrestodeladivisiónenteradementreny[m/n]esla EntoncesC(m)C(p)ai. SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 23 ---
biyectiva entre las palabras de ambos alfabetos: números naturales: N :AN. palabras sobre B: C :NB. La composición C N es una aplicación biyectiva de A en B (primero se calcula el código numérico de una palabra de B SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 24 ---
biyectiva entre las palabras de ambos alfabetos: números naturales: N :AN. palabras sobre B: C :NB. La composición C N es una aplicación biyectiva de A en B (primero se calcula el código numérico de una palabra de B haremos sobre el alfabeto {0,1} (para desarrollar la teoría) aunque lo haremos sobre alfabetos más amplios (ASCII) para un caso SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 25 ---
Si A{a ,...,a } nosotros siempre vamos a considerar el siguiente orden total en sus palabras: u1u2 si y solo si se da una de las siguientes condiciones: u u 2 u 1u 2 3 u 1u 2 y u 1 precede a u 2 en orden alfabético, teniendo en cuenta que a 1a 2a n. Es decir si u 1 a r1 ...a ri a s1 ...a sm y u 2 a r1 ...a ri a l1 ...a lm y s 1l 1 (el Esto es equivalente a u u si y solo si N(u )N(u ) palabras: hay infinitas palabras que empiezan por a antes de SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 26 ---
SelepuedeasignaracadaMTsobreunalfabeto{0,1}unacadenayunnúmero Losestadosson{q1,...,qk}.Elestadoinicialesq1 yhayunúnicoestadofinal q2 (estosiempresepuedeconseguir). LossímbolosdeB son{a1,a2,...,am}dondea1 es0,a2 es1ya3 eselsímbolo seráu(M). LacodificacióndelaMTserealizadelasiguienteforma: Cadatransiciónδ(qi,aj)(qk,al,M)secodificacomo0i10j10k10l10u(M). UnavezcalculadalacadenawM,podemoscalcularsunúmeroN(w)conel alfabeto{0,1},segúnelprocedimientoquehemosvistoparaasignarnúmerosa palabras.EstenúmerotambiénsedenotarácomoN(M). sentidoalguno.SeaT(n)laMTcorrespondientealnúmeronoNula(querechaza todaslaspalabras)sinohayMTasociadaalnúmeron.Tambiéndenotaremoscomo T(w)laMTcuyocódigoesw:Mw. SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 27 ---
{0,1}, podemos codificar M como hemos visto y después añadir 111 seguido de w, dando lugar a la cadena M,w SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 28 ---
VamosadefinirunlenguajeLd sobre{0,1}quenoesr.e.Estelenguajeseconoce Seaw{0,1},wLd siysolosilaMTcuyacodificaciónesw (T(w))noaceptaw. estadoyningunatransición(siemprerechaza). Siw0,w1,w2,...sontodaslaspalabrasde{0,1} ordenadas,entonces Ld{MM noacepta M comoentrada} SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 29 ---
VamosadefinirunlenguajeLd sobre{0,1}quenoesr.e.Estelenguajeseconoce Seaw{0,1},wLd siysolosilaMTcuyacodificaciónesw (T(w))noaceptaw. estadoyningunatransición(siemprerechaza). Siw0,w1,w2,...sontodaslaspalabrasde{0,1} ordenadas,entonces Ld{MM noacepta M comoentrada} SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 30 ---
sobre el alfabeto {0,1}. Dicha máquina acepta palabras w tales que Sea M la codificación de la MT M . Si M L entonces M acepta M (ya que M acepta L ), como consecuencia y por la definición de L , M 6L . Si M 6L entonces M no acepta M (ya que M acepta L ) y, por la definición de L , M L . SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 31 ---
DIAGONAL(M). SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 32 ---
Recordatorio: Problemas y Lenguajes Dada u, ¿es uL? Conjunto x, es tal que PROBLEMA(x)SI Aceptar Responder SI Máquina Turing Acept. Algoritmo SI/NO SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 33 ---
Recordatorio: Problemas y Lenguajes Lenguaje recursivamente enumerable Problema cuya salida es SI, para las entradas de NO el algoritmo puede decir NO o ciclar Lenguaje recursivo Problema decidible las palabras que no son del lenguaje (nunca cicla). cuya salida es SI y aquellas cuya salida es NO (nunca cicla). SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 34 ---
Si LA, el complementario de L respecto a A se denotará como conlassiguientescaracterísticas: cintaaB paraelquenohayadefinidaunatransición,seañade δ(p,a)(r,a,D). SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 35 ---
condoscintas:enunafuncionacomoM1 yenlaotracomoM2. MesunamáquinaquefuncionacomoM1yM2alavez(comoenelautómataproducto). ElconjuntodeestadosdeMeselproductoQ1Q2dondeQ1eselconjuntodeestados EstáclaroqueM aceptaLysiempretermina,yaquetodapalabrauAestáenLoen SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 36 ---
EllenguajeuniversalLu eselconjuntodetodasv lascadenasdelalfabeto{0,1}que codificanparejas(M,w)(esdecirvM,w)talesquelaMTM aceptalacadena w,dondew{0,1} yelalfabetodeentradadeM es{0,1}. UniversalylonotaremoscomoUNIVERSAL(M.w). SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 37 ---
M,w simule la MT M sobre la entrada w y termine cuando cuando M acepta w. M contiene varias cintas: entrada w. Un símbolo a B se representa como 0i y los SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 38 ---
Demostración (cont.) 3 Inicializalaterceracintacon0quecorrespondeconelestadoinicial(suponemos queesq1). movimientocorrespondientes: 3 Hacer el movimiento en la cinta 2, según sea m (m1 a la izquierda, m2 a la derecha). 5 SiM pasaaunestadodeaceptación(elestadoq2),entoncesMu parayacepta. SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 39 ---
SiM esunaMTqueaceptaseLu,construiríamoslasiguienteMT,M: Si M lee w entonces, convierte w en w111w (como la codificación de (w,w)). M acepta w si y solo sí, M acepta w111w. Es decir w111w 6L . Esto es la MT cuya codificación es w no acepta la palabra w. Esto es equivalente a que w L . HemosconstruidounaMTqueaceptaLd,encontradeloquesabemos:Ld no SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 40 ---
El problema universal UNIVERSAL(M,w) no es decidible. Por reducción al absurdo: Si UNIVERSAL(M,w) fuese decidible, entonces existiría un programa PROGRAMA(M,w) que siempre termina y lo resuelve. Construyamos ahora el siguiente programa: PROGRAMAD(M) SAL PROGRAMA(M,M) Si SALNO Return SI Return NO Pero este programa tiene como entrada una MT M y responde SI SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 41 ---
Reducción (en términos de lenguajes) Si L1A y L2B son lenguajes, el lenguaje L1 se reduce al lenguaje L2 si existe un algoritmo M (una MT) que siempre para y calcula una función f :AB tal que para toda entrada w A, w L1f(w)L2. SI/NO SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 42 ---
Reducción (en términos de lenguajes) Si L1A y L2B son lenguajes, el lenguaje L1 se reduce al lenguaje L2 si existe un algoritmo M (una MT) que siempre para y calcula una función f :AB tal que para toda entrada w A, w L1f(w)L2. w f(w) SI/NO SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 43 ---
Reducción (en términos de lenguajes) Si L1A y L2B son lenguajes, el lenguaje L1 se reduce al lenguaje L2 si existe un algoritmo M (una MT) que siempre para y calcula una función f :AB tal que para toda entrada w A, w L1f(w)L2. ww ff((ww)) SI/NO SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 44 ---
Reducción (en términos de problemas) algoritmo ALG(w) que siempre para y calcula una función f(w) tal que produce la misma respuesta para la entrada f(w)ALG(w). SI/NO ALG(x) de las entrandas de PROBLEMA1 a las entrandas de PROBLEMA1(x)PROBLEMA2(ALG(x)) SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 45 ---
Reducción (en términos de problemas) algoritmo ALG(w) que siempre para y calcula una función f(w) tal que produce la misma respuesta para la entrada f(w)ALG(w). w f(w) SI/NO ALG(x) de las entrandas de PROBLEMA1 a las entrandas de PROBLEMA1(x)PROBLEMA2(ALG(x)) SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 46 ---
Reducción (en términos de problemas) algoritmo ALG(w) que siempre para y calcula una función f(w) tal que produce la misma respuesta para la entrada f(w)ALG(w). ww ff((ww)) SI/NO ALG(x) de las entrandas de PROBLEMA1 a las entrandas de PROBLEMA1(x)PROBLEMA2(ALG(x)) SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 47 ---
Reducción (en términos de problemas) Sea ALG(w) el algoritmo de la reducción de PROBLEMA a PROBLEMA . Supongamos que ALG2(x) es un algoritmo que hace a PROBLEMA semidecidible (decidible), entonces el algoritmo: ALG1(x) w ALG(x) Return (ALG2(w)) hará al problema PROBLEMA semidecidible (decidible). Por lo tanto si PROBLEMA no es semidecidible (decidible), SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 48 ---
Definimos los siguientes lenguajes sobre el alfabeto {0,1}: L conjunto de palabras M tales que M es una MT sobre {0,1} que no acepta ninguna palabra (L(M)0/). L conjunto de palabras M tales que M es una MT sobre {0,1} que acepta alguna palabra (L(M)0/)(L(M)60/). VACIO(M) es la versión de problema de L : dada una MT M, C-VACIO(M) es la versión de problema de L : dada una MT M, SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 49 ---
Semidecidivilidad de C-VACIO(M) HayunaMTnodeterministaM queaceptaLne: C-VACIO(M)essemidecidible. SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 50 ---
Lne noesrecursivo(C-VACIO(M)noesdecidible) SAL(M,w)andC-VACIO(M).Esoconsisteenunalgoritmo ALG(M,w)quecalculauna MTMdetalmaneraqueUNIVERSAL(M,w)tengalamismasoluciónqueC-VACIO(M). Estefuncionadelasiguienteforma: Supongamosunaentrada(M,w)vamosaconstruirunaMTM quefuncionade M ignorasuentradax ycolocaenlacintadeentradaw.Silalongituddew es (M,w)ysemuevealaderecha.Despuéspasaríaaunnuevoestadoenelque M semuevealaizquierdahastaelprimersímbolodew. M pasaalestadoinicialdeM conw yfuncionacomoM paraw. LasalidadeM eslamismaqueladeM paraw. EstáclaroqueM aceptaw siysolosiM aceptaalgunapalabra.DehechoL(M)A siM aceptaw yL(M)0/ siM noaceptaw. SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 51 ---
Dada una entrada (M,w) la reducción construye la siguiente MT: x w SI/NO L no es r.e. (si lo fuese, entonces L sería recursivo) SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 52 ---
Propiedad lenguaje r.e. Propiedad de los lenguajes de las MTs Es una problema de decisión del tipo: Dada una MT M, ¿verifica el lenguaje L(M) la propiedad P? SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 53 ---
Llamemos NOTRIVIAL(M) a dicha propiedad no trivial y supongamos una propiedad VamosareducirelproblemaUNIVERSAL(M,w)aestapropiedad.Supongamos(M,w) una MT y su entrada construimos M de la siguiente forma (se supone que tiene una entradax enlaprimeracinta): M tienedoscintas.Enlasegundacolocaaw yempiezatrabajandosobreesta cintaconlasmismastransicionesdeM.Siterminaynoacepta,entoncesM no EstáclaroquesiM aceptaw,entoncesellenguajedeM esLyverificalapropiedad. SiM noaceptaw,entoncesellenguajedeM esvacíoynoverificalapropiedad.Con SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 54 ---
Dada una entrada para el problema universal (M,w) se construye la siguiente MT M M x SI/NO EstáclaroUNIVERSAL(M,w)tienerespuestaSI,entoncesM aceptaw,entoncesM aceptaLylarespuestadeNOTRIVIAL(M)estambiénSI. SiUNIVERSAL(M,w)tienerespuestaNO,entoncesM noaceptaw,yestamáquina M acepta0/ ylarespuestadeNOTRIVIAL(M)estambiénNO. ComoUNIVERSAL(M,w)noesdecidible,NOTRIVIAL(M)tampocoloes. SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 55 ---
ElProblemadelasCorrespondenciasdePost(POST(A1,A2)) B1w1,...,wk,B2u1,...,uk depalabrassobreA.Elproblemaesdeterminarsi existeunasecuencianovacíadeenterosi1,...,im talesquewi1 ...wim ui1 ...uim . Podemospensarencadapareja(wi,ui)comounbloquedeconstrucción: Laespecificacióndelproblemanosdaunconjuntodebloquesdisponibles.Porejemplo: SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 56 ---
ElProblemadelasCorrespondenciasdePost(POST(A1,A2)) B1w1,...,wk,B2u1,...,uk depalabrassobreA.Elproblemaesdeterminarsi existeunasecuencianovacíadeenterosi1,...,im talesquewi1 ...wim ui1 ...uim . Podemospensarencadapareja(wi,ui)comounbloquedeconstrucción: Laespecificacióndelproblemanosdaunconjuntodebloquesdisponibles.Porejemplo: Enestecaso,larespuestaesafirmativa.Secuencia:1,3,1,1,3,2, Sivisitáislapáginaweb: SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 57 ---
(POSTM(A1,A2)) longitud B w ,...,w , B u ,...,u de palabras sobre A tales que u ,w 6ε y un entero i. El problema es determinar si existe una secuencia no vacía de enteros i ,...,i tales que i i y w ...w u ...u . es el primero de la lista de los bloques (sólo hay que reordenar los SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 58 ---
Supongamos el ejemplo: Como problema de las correspondencias de Post, tiene solución: 3,2,3,1 (respuesta afirmativa) Efectivamente sale: Sin embargo, como PCP modificado no tiene solución (respuesta negativa) ya que en ese caso, una solución tiene que empezar por el SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 59 ---
Un algoritmo no-determinista que acepta los casos positivos es: Secuencia[] FinFalso EligeFinVerdaderooFinFalse SiessoluciónrespondeSI,encasocontrariorespondeNO SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 60 ---
Por ejemplo, si el alfabeto es A{a,b,c}, podemos codificar a00, b01, c 11. Así una ficha se codificaría símbolo a símbolo: SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 61 ---
Vamos a reducir el lenguaje universal UNIVERSAL(M,w) a este w L(M). Vamos a construir un problema de correspondencias de estados, más un separador que no esté en los conjuntos anteriores SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 62 ---
Demostración (Cont.) Si w a1...a q0a1...a Por cadatransiciónδ(q,a)(q,b,D),introducimoselbloque bq Por cada transición δ(q,a)(q,b,I), introducimos el bloque qcb Para cada qF (estado final), añade los bloques , , y el q SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 63 ---
Demostración (Cont.) Cada configuración (q,u,v) se representa por la cadena uqv y las distintas configuraciones se separan por . hasta que quede abajo ...q y arriba ...qa ó ...aq donde q q SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 64 ---
M ({q ,q ,q ,q ,q },{0,1},{0,1,X,Y,},δ,q ,,{q }) donde las transiciones no nulas son las siguientes: δ(q ,0)(q ,X,D) δ(q ,Y)(q ,Y,D) δ(q ,0)(q ,0,D) δ(q ,1)(q ,Y,I) δ(q ,Y)(q ,Y,D) δ(q ,0)(q ,0,I) δ(q ,X)(q ,X,D) δ(q ,Y)(q ,Y,I) δ(q ,Y)(q ,Y,D) δ(q ,)(q ,,D) Una solución del PCP modificado, tiene que empezar con la ficha: q 000111 SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 65 ---
Ejemplo (Cont.) q 000111 Cómo δ(q ,0)(q ,X,D), tenemos la ficha 0 la única forma de proceder en una posible solución es: q 0 0 0 1 1 1 q 000111 Xq 0 0 1 1 1 SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 66 ---
Ejemplo (Cont.) inferior de una solución (representamos como una única ficha la solución parcial): u uXXXYYYq u X X X Y Y Y q uXXXYYYq X X X Y Y Y q SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 67 ---
Ejemplo (Cont.) lleguemos a una situación en la que tenemos: w wq q por ser q final, obteniendo una solución: w q wq SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 68 ---
problema de las correspondencias de Post PCPM(A1,A2) PCP(B1,B2) Supongamos que nos dan un conjunto de bloques , ,, y problema PCPM(A1,A2) Construimos el siguiente problema de Post, PCP(B1,B2), con dos símbolos nuevos: (cid:7),(cid:4) y con los bloques: (cid:7)u1 (cid:7)u1 (cid:7)u2 (cid:7)u (cid:7)(cid:4) , , ,, , (cid:7)v1 (cid:7) v1 (cid:7) v2 (cid:7) v (cid:7) (cid:4) Donde, si ua1a2...a (cid:7)u(cid:7)a1 (cid:7)a2...(cid:7)a , u(cid:7)a1 (cid:7)a2...(cid:7)a (cid:7), (cid:7)u(cid:7)(cid:7)a1 (cid:7)a2...(cid:7)a (cid:7) SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 69 ---
PCPM(B1,B2): , ,, PCP(B1,B2): (cid:7)u1 (cid:7)u1 (cid:7)u2 (cid:7)u (cid:7)(cid:4) , , ,, , (cid:7)v1 (cid:7) v1 (cid:7) v2 (cid:7) v (cid:7) (cid:4) (cid:7)(cid:4) (cid:4) (cid:7)u1 (cid:7)v1 (cid:7) (cid:7)(cid:4) mismo símbolo (cid:7) y además terminar por . Si a todos los bloques (cid:4) SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 70 ---
Saber si L(G )L(G )0/. Determinar si L(G)T, donde T es el conjunto de símbolos Comprobar si L(G )L(G ). Determinar si L(G )L(G ). Determinar si L(G )R. Comprobar si L(G) es regular. Conocer si L(G) es inherentemente ambiguo. Comprobar si L(G) es determinista. SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 71 ---
Reducción: ambigüedad (AMBIGUA(G)) es indecidible. ,, Sea B A{b1,...,b } donde b 6A y construimos la siguiente gramática: S CD C u Cb u b , i 1,...,k Dv Db v b , i 1,...,k SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

--- Página 72 ---
,, SeaBA{b1,...,bk}dondebi6Ayconstruimoslasiguientegramática: SCD, CuiCbiuibi, i1,...,k, DviDbivibi, i1,...,k, Sebasaenlosiguiente: ij{1,...,k}.Sólohayunaformadegenerarunadeestaspalabrasapartirde ij{1,...,k}.Sólohayunaformadegenerarunadeestaspalabrasapartirde C yapartirdeD,esdecircuandouui1 ...uin bil ...bin v i1 ...v i n b i1 ...b i n . Estosoloocurresinneiji ,j.Esdecircuandoexisten(i1,...,in)talque ui1 ...uin vi1 ...vin ,esdecircuandoelPCPtienesolución. SerafínMoral Tema1: MáquinasdeTuring. FuncionesyLenguajesCalculables

