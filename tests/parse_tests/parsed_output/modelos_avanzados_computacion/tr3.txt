--- Página 1 ---
Modelos Avanzados de Computación: Tema 3: Clases de Complejidad smcdecsai.ugr.es SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 2 ---
Un problema sencillo: el flujo máximo. Un problema difícil: mínimo número de colores. SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 3 ---
Nuesto objetivo último: comprender mejor (de manera profunda) la SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 4 ---
Recursos que consume (espacio, tiempo, etc.) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 5 ---
Recursos que consume (espacio, tiempo, etc.) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 6 ---
Abstracción de ejemplos: complejidad en función del tamaño Abstracción del Modelo: Máquina de Turing. Inicialmente se trabaja con lenguajes (se abstrae la codificación). Recursos: Tiempo, espacio Algoritmos: El mejor algoritmo Clases de complejidad: clases muy amplias. SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 7 ---
n10 n20 n30 n40 n50 n 3n 0.059sg. 58min. 6.5años 3855siglos 2108siglos 1,31013siglos SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 8 ---
Si tengo un número x, ¿cuantos caracteres necesito para escribir x? SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 9 ---
Si tengo un número x, ¿cuantos caracteres necesito para escribir x? número es x el número de caracteres que necesito es de orden nlog(x). SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 10 ---
Si tengo un número x, ¿cuantos caracteres necesito para escribir x? número es x el número de caracteres que necesito es de orden nlog(x). caracteres (dígitos). SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 11 ---
Si tengo un número x, ¿cuantos caracteres necesito para escribir x? número es x el número de caracteres que necesito es de orden nlog(x). caracteres (dígitos). hay que medirla en función de su valor (1365), sino en función del número de caracteres necesario para escribirlo (4) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 12 ---
Si tengo un número x, ¿cuantos caracteres necesito para escribir x? número es x el número de caracteres que necesito es de orden nlog(x). caracteres (dígitos). hay que medirla en función de su valor (1365), sino en función del número de caracteres necesario para escribirlo (4) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 13 ---
Si tengo un número x, ¿cuantos caracteres necesito para escribir x? número es x el número de caracteres que necesito es de orden nlog(x). caracteres (dígitos). hay que medirla en función de su valor (1365), sino en función del número de caracteres necesario para escribirlo (4) 2n (si es en decimal, entonces cambia la base por 10). SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 14 ---
El número de divisiones es O(x), pero esa no es una medida correcta de SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 15 ---
El número de divisiones es O(x), pero esa no es una medida correcta de ocupa del orden de nlog(x) caracteres. SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 16 ---
El número de divisiones es O(x), pero esa no es una medida correcta de ocupa del orden de nlog(x) caracteres. SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 17 ---
El número de divisiones es O(x), pero esa no es una medida correcta de ocupa del orden de nlog(x) caracteres. con un orden O(n2). SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 18 ---
El número de divisiones es O(x), pero esa no es una medida correcta de ocupa del orden de nlog(x) caracteres. con un orden O(n2). Como el número nlog(x), entonces x es de orden 2n, y el número de divisiones es de orden O(2n). SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 19 ---
El número de divisiones es O(x), pero esa no es una medida correcta de ocupa del orden de nlog(x) caracteres. con un orden O(n2). Como el número nlog(x), entonces x es de orden 2n, y el número de divisiones es de orden O(2n). Multiplicando una división por el número de divisiones, nos sale O(n22n), SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 20 ---
G. Lamé (1884).-Número de divisiones para el máximo común Años 50 y 60.- Algoritmos Polinómicos Algoritmos Buenos Hartamis, Stearns (1965).-Análisis sistemático de medidas de M. Blum (1967).-Axiomas para una medida de complejidad. SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 21 ---
Cook (1971) The Complexity of Proving Procedures - Lavine .- Karp (1972).-Dió una amplia lista de problemas NP-completos. Meyer(1970) Stockmeyer (1976).- Definieron la jerarquían SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 22 ---
Baker, Hill and Solovay (1975).- Resultados sobre complejidad Berman y Hartmanis (1977) propusieron la conjetura del Solovay y Strassen (1977).- Consideraron algoritmos Valiant (1979).- Definió la clase P de las funciones que Yao (1979).- Propuso estudiar la complejidad de la comunicación (problemas distribuidos). SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 23 ---
Babai (1985).- Sistemas interactivos de demostración. Papadimitriou y Yannakakis (1988).- Definieron clases de Bernstein y Vazirani (1997).- Complejidad de la computación Los problemas matemáticos del milenio: P frente a NP  Agrawal, Kayal y Saxena (2002).- Han demostrado que la Reingold (2005).- Ha demostrado que la conectividad en Hartmanis (31 de diciembre de 1962).- Este ha sido un buen año, En realidad están siendo unos buenos casi 60 años de El zoo de la complejidad:  ¡545 clases en abril de 2022! y subiendo. SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 24 ---
por su capacidad. Hay un origen (s) y un destino (t). El valor de un flujo es la suma de lo que sale del origen (que es igual a la suma de lo que llega al destino). SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 25 ---
SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 26 ---
Partimos del problema (V,E,s,t,c) donde V es el conjunto de c es una función que asigna a cada pareja de nodos (x,y) su capacidad c(x,y). 1. Se comienza con un flujo cualquiera, por ejemplo el flujo cero: f(x,y) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 27 ---
2. Se calcula el grafo diferencia (v,E,s,t,c) donde EE{(x,y) : f(x,y)c(x,y)}{(x,y) : f(y,x)0} c(x,y)c(x,y)f(x,y), si (x,y)E c(x,y)f(y,x), si (x,y)6E SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 28 ---
un flujo al nuevo camino que es valor mínimo de c en todas SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 29 ---
arista se resta: SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 30 ---
Ejemplo (cont.) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 31 ---
Ejemplo (cont.) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 32 ---
Ejemplo (cont.) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 33 ---
Ejemplo (cont.) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 34 ---
Ejemplo (cont.) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 35 ---
Ejemplo (cont.) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 36 ---
Ejemplo (cont.) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 37 ---
Ejemplo (cont.) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 38 ---
Ejemplo (cont.) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 39 ---
Ejemplo (cont.) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 40 ---
Ejemplo (cont.) No Existe Nuevo Camino. Solución Óptima: Flujo en la solución óptima: 2 t SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 41 ---
Flujo Máximo: Un ejemplo con problemas SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 42 ---
Flujo Máximo: Un ejemplo con problemas SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 43 ---
Flujo Máximo: Un ejemplo con problemas SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 44 ---
Flujo Máximo: Un ejemplo con problemas SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 45 ---
Flujo Máximo: Un ejemplo con problemas lenta: una unidad cada vez. Si el número C es muy grande, esto da a muchas iteraciones: la complejidad es exponencial en función del complejidad es realmente polinómica: basta con elegir en cada caso puede demostrar que el número máximo de iteraciones en O(m3) O(n5) donde n es la longitud de la entrada. SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 46 ---
Problema de colorear un grafo (COLOR) Dado un grafo (G,V) y un número entero K K SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 47 ---
Problema de colorear un grafo (COLOR) Dado un grafo (G,V) y un número entero K K SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 48 ---
fuerza bruta: la búsqueda en el espacio de todas las opciones. SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 49 ---
resolución del flujo máximo (FM). Este es el caso del problema de las pareja (PAR). SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 50 ---
El problema de las parejas ( , , ) subconjunto AV V (representa las compatibilidades de decidir si existe un subconjunto AA tal que cada elemento de v V aparece en uno y sólo en uno de los pares (v ,y)A y cada elemento de v V aparece en uno y sólo en uno de los pares (x,v )A. SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 51 ---
Para cada ejemplo de las parejas PAR(V ,V ,A) podemos construir un problema del flujo máximo equivalente FM(G,c,s,t): SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 52 ---
PAR ¿FM 4? equivalente al problema de las parejas es: ¿Existe un flujo máximo de tamaño mayor o igual a m? SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 53 ---
Supongamos que FM(G,c,s,t,m) es una función que resuelve responde a la pregunta: ¿Existe un flujo de valor mayor o igual a m? Supongamos que REDUCE(V ,V ,A) es el algoritmo que (G,c,s,t,m)REDUCE(V ,V ,A). problema de las parejas: Calcula (G,c,s,t,m)REDUCE(V1,V2) Return FM(G,c,s,t,m) compara la dificultad de FM y PAR: FM es más difícil o igual SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 54 ---
Una Máquina de Turing (u otro dispositivo de cálculo) es de complejidad f(n) si y solo si para toda entrada x A de longitud xn, la máquina acepta esta entrada o la rechaza consumiento menos de f(n) unidades. Un lenguaje se dice de complejidad f(n) si existe una Máquina de Turing que acepta el lenguaje y tiene complejidad f(n). Unidades pasos de cálculo complejidad en tiempo Unidades casillas de la cinta complejidad en espacio SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 55 ---
Se dice que una medida g(n) es de orden O(f(n)) si existe n y c 0 tal que nn , g(n)c.f(n). Si L es aceptado en tiempo t(n) por una Máquina de Turing con k cintas, entonces m0 existe una Máquina de Turing con k t(n)n SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 56 ---
Vamos a ver cómo se reduce el tiempo a la mitad (aplicándolo máquina de Turing M en la que hay un símbolo nuevo w por cada representar las casillas 2i1,2i,2i1 de la cinta de entrada de M. SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 57 ---
El programa para M se escribe, simulando para w lo que haría M para los símbolos abc hasta que sale de estos símbolos (o cicla en ellos). Esto siempre se puede calcular ya que son sólo 3 casillas. dos celdas consecutivas de M se supone que ese símbolo se guarda en memoria (añadiendo estados). mitad (hace falta n para cambiar la entrada y codificarla en el nuevo alfabeto). SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 58 ---
El programa para M se escribe, simulando para w lo que haría M para los símbolos abc hasta que sale de estos símbolos (o cicla en ellos). Esto siempre se puede calcular ya que son sólo 3 casillas. dos celdas consecutivas de M se supone que ese símbolo se guarda en memoria (añadiendo estados). mitad (hace falta n para cambiar la entrada y codificarla en el nuevo alfabeto). SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 59 ---
Los números se pueden codificar en cualquier base menos unario (es muy poco eficiente y necesita mucha longitud). En teoría supondremos cierto alfabeto, por ejemplo {a,b}. Si tenemos m objetos, ¿cual será lo longitud del nombre de un objeto? Con palabras de longitud k tenemos para darle nombre a m2k objetos (hay 2k palabras distintas de longitud k). Luego, si el número de objetos es m2k, la longitud del nombre k es del orden de log(m) donde m es el número de objetos. SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 60 ---
distintos procedimientos: a) Listas los vértices y las aristas b) Dar una lista de vecinos para cada c) Dar una matriz de adyacencia del a) v[1]v[2]v[3]v[4](v[1]v[2])(v[2]v[3]) 36 4v10a 4v10a(v2a)log 10 v b) (v[2])(v[1]v[3])(v[2])() 24 2v8a 2v8a2alog v c) 0100/1010/0010/0000 19 v2v1 v2v SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 61 ---
Como la longitud de la entrada n verifica que v nv3, una Si es de orden O(nk), entonces será a lo más O(v3k). Si es de orden O(vk), entonces será a lo más O(nk). es de orden logarítmico O(log(n)): es independiente de la de vértices: el exponente en un logaritmo se transforma en una SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 62 ---
siguen las siguiente reglas: Se cuentan las casillas que se usan (se escribe o se pasa sobre ellas). Un algoritmo (determinista o no determinista) que tenga una SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 63 ---
En ese caso podemos seguir las siguientes reglas: de un conjunto con N objetos ocupa log(N). modifica (sólo tiene los datos originales de entrada) entonces nunca leemos tampoco se cuenta (puede ser que la pongamos en una estructura de datos que nunca leemos). SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 64 ---
Reconocer palíndromos en espacio (log( )) cintas: 1 2 3 3 2 1 (cid:3) Entrada 1 0 1 (cid:3) (cid:3) Posiciónqueseestácomprobando(binario)N2 1 1 (cid:3) (cid:3) (cid:3) ContadorenbinarioparaencontrarposicionesN3 -Ponemos1enlasegundacinta(N2),Ponemos1enlaterceracinta(N3) -Repetir: -Repetir:IncrementarN3en1,moveraladerechaenlaprimera,hastaN2N3 -Poner1enlaterceracinta(N31),iralfinaldelaprimeracinta -Repetir:IncrementarN3en1,moverizquierdaenlaprimera,hastaN2N3 LosnúmerosN2yN3necesitanlog(n)casillasdondeneslalongituddelnúmeroen SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 65 ---
Tenemos un grafo dirigido G y dos nodos v1 y v2. ¿Existe un camino entre estos dos nodos? Problema CAMINO(G,v1,v2) las aristas (v,v) del grafo, y después v1 y v2 con un separados y que funciona de la siguiente forma: -Repetirhastaquelasegundacintaestévacía: -Buscamostodoslospares(v,v)enlaprimeracinta -Sivv2Aceptar -Siv noestáenlaterceracinta,seañadealasegundaylaterceracinta SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 66 ---
Lascintas2y3siempresonmáscortasquelaentrada,luegoesdeO(n)enespacio. Elnúmerodepasossobrelastrescintases: deordenO(n2). Enlacinta2cadanodoserecorrevariasveces:paraescribirlo,buscarloenla lomásn,luegolacomplejidadtotalesdeordenO(n2). encontramoslaarista(v,v).Comocadanodoseanalizasolounavez,entonces alomásserecorreunavezporarista.ComoelnúmerodearistasesO(n)yel tamañodelacintaesO(n),obtenemosO(n2)entotal. Entotal,lacomplejidadentiempoesO(n2)yenespacioO(n) TambiénsepuedehacerenespacioO(v)yentiempoO(v3),dondev eselnúmerode vértices(porejemplocodificandocomomatriz0-1). SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 67 ---
CAMINO: Espacio Determinista Teorema de Savitch: Existencia de Caminos La complejidad en O(log2(v)), donde v es el número de nodos del grafo y, por tanto, CAMINO(x,y,i): Existencia de un camino de longitud 2i, y la CAMINO(x,y,i)z,CAMINO(x,z,i1)yCAMINO(z,y,i1) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 68 ---
CAMINO: Espacio Determinista llamar con N log(v): CAMINO(x,y,N) - Si xy Return TRUE - Si N - Para cada nodo z: - Si CAMINO(x,z,N-1) - Si CAMINO(z,y,N-1) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 69 ---
CAMINO: Espacio Determinista -SiN0compruebaenelgrafosiexisteunenlace CAMINO(x,y,3) -SieselúltimodevuelveFALSE -SirecibeTRUEdelaprimera:realizasegundamismonodo CAMINO(x,v1,2) blemadeformarecursivaenunacintaseparadasporun0óun1 es de longitud O(log(v)) y el número de tripletas es de orden O(log(v)):TOTALO(log2(v))enespacio. CAMINO(x,v1,1) CAMINO(x,v1,0) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 70 ---
CAMINO: Espacio Determinista -SiN0compruebaenelgrafosiexisteunenlace CAMINO(x,y,3) -SieselúltimodevuelveFALSE -SirecibeTRUEdelaprimera:realizasegundamismonodo CAMINO(x,v1,2) blemadeformarecursivaenunacintaseparadasporun0óun1 es de longitud O(log(v)) y el número de tripletas es de orden O(log(v)):TOTALO(log2(v))enespacio. CAMINO(x,v1,1) CAMINO(x,v2,0) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 71 ---
CAMINO: Espacio Determinista -SiN0compruebaenelgrafosiexisteunenlace CAMINO(x,y,3) -SieselúltimodevuelveFALSE -SirecibeTRUEdelaprimera:realizasegundamismonodo CAMINO(x,v1,2) blemadeformarecursivaenunacintaseparadasporun0óun1 es de longitud O(log(v)) y el número de tripletas es de orden O(log(v)):TOTALO(log2(v))enespacio. CAMINO(x,v1,1) CAMINO(v2,v1,0) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 72 ---
Una máquina de Turing no determinista tiene complejidad f(n) en tiempo (espacio) si y solo si para una entrada x de longitud n f(n) pasos (terminan y no usan más de f(n) casillas). SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 73 ---
Ejemplo (en términos de algoritmos) 1. Asignar un color posible a cada nodo: mediante una serie de entonces debe de existir la posibilidad de que acepte; si la respuesta La complejidad en tiempo (no-determinista) sería proporcionar al SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 74 ---
Búsqueda de Caminos en Grafos: Espacio no-determinista En espacio no-determinista el problema se resuelve en espacio O(log(v)) donde v es el número de vértices, (la misma complejidad en función de la entrada O(log(n))). x y el nodo x : Llamamos a Camino(x ,x ,m) con mv (el número de nodos). Si m0 solo acepta si x x y rechaza si x 6x . Si m0: conectadoconx deformano-determinista(sinoexisteningunorechaza). a) Si x es igual a x , entonces para y acepta. b) Si x es distinto de x , vuelve a ejecutar el algoritmo con x en el lugar m0: a) x i x j SI b) x i x k x j k j Llamada recursiva a Camino(x ,x ,m1) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 75 ---
TIEMPO(f) Todos los lenguajes aceptados por una máquina de Turing determinista en tiempo O(f(n)). ESPACIO(f) Todos los lenguajes aceptados por una máquina de Turing determinista en espacio O(f(n)). NTIEMPO(f) Todos los lenguajes aceptados por una máquina de Turing no determinista en tiempo O(f(n)). NESPACIO(f) Todos los lenguajes aceptados por una máquina de Turing no determinista en espacio O(f(n)). SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 76 ---
Clase polinómica (tiempo): P S TIEMPO(nj) j Clase polinómica no determinista (tiempo): NP S j NTIEMPO(nj) Clase polinómica (espacio): PESPACIO S ESPACIO(nj) j Clase polinómica no determinista (espacio): NPESPACIO S NESPACIO(nj) j Clase de espacio logarítmico determinista: L ESPACIO(log(n)) Clase de espacio logarítmico no determinista: NL NESPACIO(log(n)) Clase exponencial en tiempo: EXP S (2nj ) j SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 77 ---
en el número de pasos (si el mecanismo da f(n) pasos, entonces la máquina de Turing puede dar fk(n) pasos). SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 78 ---
Tipos de Instrucciones: Una RAM se controla por un programa Mi1 El estado de la Máquina RAM es el nú- MiMjMk mero de instrucción que se está ejecu- MiMjMk tando. Mi[M 1/2] MiMMj (poner en Mi el valor conte- nidoenlaceldanúmeroMj) MMi Mj (ponerenlaceldanúmeroMi elvalordeMj) GotomifMi SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 79 ---
Entrada: m enteros en las celdas M ,...,M Tamaño de la Entrada: Suma del tamaño de los enteros de RAM Aceptadoras: Escriben 0 en M si rechazan y 1 si aceptan. RAM calculadoras de f(x): Escriben f(x) en M SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 80 ---
MáquinaTuring1cinta:1TM O(T(n)) O(T(n)logT(n)) MáquinaTuringkcintas:kTM O(T2(n)) O(T(n)logT(n)) MáquinaRAM:RAM O(T3(n)) O(T2(n)) (Del libro de Garey, Johnson. Distintos autores pueden dar distintas de modelo.) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 81 ---
SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 82 ---
entiempof(n),entoncesesdecididoporunamáquinadeTuringdeterminísticacon3 cintasentiempoO(df(n))donded1esunaconstantequedependedelamáquina k1(enotrocasolaMáquinaesdeterministayelresultadoestrivial): ParaL0,1,2,... {1,...,k}. SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 83 ---
La simulación termina seguro cuando Lf(n) o antes. secuencias es menor o igual a : f(n) kf(n)1 kL k L que es de orden kf(n). Cada simulación y cada cambio de secuencia (para pasar a la siguiente) se lleva del orden de Lf(n) pasos. En total tenemos que la simulación es de orden O(f(n)kf(n)) y como f(n) es menor que kf(n), tenemos que la simulación es de orden O(kf(n).kf(n)) y teniendo en cuenta que kf(n).kf(n)k2f(n)(k2)f(n) y el resultado se obtiene para d k2. SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 84 ---
Se verifica que LC LCoC. clase: CoP P. SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 85 ---
SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 86 ---
Relación binaria en AA Una relación binaria R es una aplicación R :AA{0,1} Algunas veces R(x,y)1 se escribe como R(x,y) y R(x,y)0 como R(x,y) (interpretando 1 como Verdadero y 0 como Falso). R en AA se dice calculable polinómicamente si existe una MT M que SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 87 ---
Un lenguaje LA está en NP si y solo si existe una relación R en AA calculable en tiempo polinómico y un polinomio p(n) tal que L{x A : y A con yp(x),R(x,y)1} Se dice que los lenguajes (problemas) de NP son los problemas que se pueden verificar en tiempo polinómio (de forma eficiente). Un lenguaje LA está en CoNP si y solo si existe una relación R en AA calculable en tiempo polinómico y un polinomio p(n) tal que L{x A : y A con yp(x),R(x,y)1} SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 88 ---
expresar como determinar los x (que representan grafos) para los que existe un y (que representa una sucesión de nodos) tal que cada nodo al siguiente y del último al primero (relación R). La condición que se pide para x e y (la relación R(x,y)) se SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 89 ---
Los que se pueden expresar como: dados unos datos x comprobar si existe un objeto y (con un tamaño limitado a un polinomio del tamaño de x) tal que se cumple una condición R(x,y)1 que es Saber si un número x es compuesto: si existe 1y x tal que la SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 90 ---
Los que se pueden expresar como: dados unos datos x comprobar si existe un objeto y (con un tamaño limitado a un polinomio del tamaño de x) tal que se cumple una condición R(x,y)1 que es Saber si un número x es compuesto: si existe 1y x tal que la C. Moore, S. Mertens (2011) The Nature of Computation. 193707721761838257287147573952588676412927 Frank Nelson Cole, American Mathematical Society, 1903 (trabajó en ello los domingos de 3 años). El número de la derecha es 2671 y se había conjeturado en el SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 91 ---
Los que se pueden expresar como: dados unos datos x comprobar si existe un objeto y (con un tamaño limitado a un polinomio del tamaño de x) tal que se cumple una condición R(x,y)1 que es Saber si un número x es compuesto: si existe 1y x tal que la C. Moore, S. Mertens (2011) The Nature of Computation. 193707721761838257287147573952588676412927 Frank Nelson Cole, American Mathematical Society, 1903 (trabajó en ello los domingos de 3 años). El número de la derecha es 2671 y se había conjeturado en el ¿Conocéis una caracterización parecida para saber si un número es primo? Existe, pero no es sencilla. SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 92 ---
SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 93 ---
(siempre quiere convencer de que la respuesta es positiva) (quiere saber la verdad) error para el verificador (Computational Complexity: A Modern Approach. Sanjeev Arora, Boaz Barak) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 94 ---
a) ESPACIO(f(n))NESPACIO(f(n)) TIEMPO(f(n))NTIEMPO(f(n)) b) NTIEMPO(f(n))ESPACIO(f(n)) c) NESPACIO(f(n))TIEMPO(kf(n)) para un k a) La demostración de a) es trivial. b) La demostración de b) se basa en la simulación de una MT no poniendo palabras a ...a donde a {1,...,k} y entonces ir escribir las palabras que es menor o igual a f(n) (recordemos que Lf(n)) y el espacio para hacer la simulación de L pasos, que también es de orden f(n). En total, el espacio necesario es de orden f(n). SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 95 ---
c) NESPACIO( ( )) TIEMPO( kf(n)) El Método de la Alcanzabilidad: Una configuración es una tripleta (q,u,v). Como no se ocupa más de f(n) en espacio, la longitud de u y v es menor o igual a f(n). El número QB 2f(n) donde B es el alfabeto de trabajo. Es decir del orden de tf(n) donde tB2. estado final y eso se puede comprobar en tiempo O(m3) donde m es el número de nodos, en nuestro caso en orden (tf(n)) 3 t2f(n)(t3) f(n) . Lo que demuestra el teorema para k t3. SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 96 ---
Sonaquellasqueverifican:f(n1)f(n)ytalesquelafuncióng(u)f(u) expresandog(u)comounasecuenciadelongitudg(u)(esdecirusandounario)es calculableenespacioO(f(n))ytiempoO(f(n)n). Sif(n)nespropia,entonces TIEMPO((f(n))TIEMPO(f2(n)) TIEMPO((f(n))6TIEMPO(f2(n)) P6EXP Dem.PTIEMPO(2n) TIEMPO((2n)2)EXP Sif(n)esunafuncióndecomplejidadpropia,entonces ESPACIO(f(n))ESPACIO(f(n)logf(n)) ESPACIO(f(n))6ESPACIO(f(n)logf(n)) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 97 ---
LNLPNPPESPACIO SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

--- Página 98 ---
Si f(n)log(n) y es propia, entonces NESPACIO(f(n))ESPACIO(f2(n)) PESPACIO NPESPACIO Si f(n)log(n) es propia entonces NESPACIO(f(n))CoNESPACIO(f(n)) SerafínMoral ModelosAvanzadosdeComputación: Tema3: ClasesdeComplejidad

