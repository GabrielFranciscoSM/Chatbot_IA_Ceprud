--- Página 1 ---
metaheurísticas: Introducción: Optimización

--- Página 2 ---
1. Introducción: Optimización ¿Optimizar? Contexto científico: La optimización es el proceso de Nivel Empresarial: Reducir los costes. Mejorar la Experiencia del cliente.

--- Página 3 ---
1. Introducción: Optimización Problema de optimización: Encontrar el valor de unas variables de decisión (sujeto a restricciones)

--- Página 4 ---
1. Introducción: Optimización Problema de optimización (minimización): f(x): x X R El objetivo es encontrar x que verifique x X: f(x) f(x), x X Optimización combinatoria Variable discreta Un Problema de Optimización Combinatoria consiste en encontrar un objeto entre un conjunto finito (o al menos contable) de posibilidades Max{ g(x) } Min{ f(x) } con f(x) -g(x)

--- Página 5 ---
1. Introducción: Optimización Tipos de problemas de optimización (representación de una solución): Permutaciones (Problemas de ordenación) Binarios (Problemas de pertenencia) Enteros (Problemas de cardinalidad, asignación, selección) De optimización numérica (Optimización de funciones no lineales)

--- Página 6 ---
1. Introducción: Optimización Problemas de optimización fáciles de resolver: Lineales: función objetivo y restricciones lineales (método Simplex) Problemas de optimización difíciles de resolver (NP- duros):

--- Página 7 ---
Problemas de explosión combinatorios. Pocos modelos teóricos

--- Página 8 ---
Viajante Mochila Asignación Cuadrática Asignación Generalizada Problema de Máxima Diversidad Problemas de Mínima Dispersión Enrutamiento de vehículos Empaquetado en Cinta

--- Página 9 ---
Problema del Viajante de Comercio: Travelling Salesman Problema:

--- Página 10 ---
Definición Problema del Viajante de comercio, TSP:

--- Página 11 ---
¿Para qué sirve? Diseño chips: Rutas más cortas. Rutas aéreas: Entre aeropuestos. Reparto almacén: Optimizar entregas. Cableado (eléctrico): Recorrido mínimo.

--- Página 12 ---
Ciudades (N) Fuerza Bruta Algoritmo Held-Karp  ¡Necesitamos buenos algoritmos y eficientes!

--- Página 13 ---
Problema de la mochila, Knapsack Problem:

--- Página 14 ---
Quadratic knapsack problem (KQP):

--- Página 15 ---
Quadratic knapsack problem (KQP):

--- Página 16 ---
Problema del enrutamiento de vehículos, VRP: conjunto de vehículos (con capacidad limitada) lo más pequeño posible tal a una serie de clientes (con demanda diferente) distribuidos

--- Página 17 ---
Problema de la asignación cuadrática, QAP: min ( ) QAP f d S Π ij S(i)S( j) N i1 j

--- Página 18 ---
Problema de la máxima diversidad, MDP:

--- Página 19 ---
Problema de la dispersión diferencial, MDD:

--- Página 20 ---
Utilidades de este problema: Diseño de Redes: minimizar la diferencia de grados entre Redes Sociales: Al reducir la diferencia de grados entre los Gestión de la red eléctrica: Optimizar la ubicación y

--- Página 21 ---
Problema del empaquetado en cinta, SPP:

--- Página 22 ---
Problema del cliqué máximo: Encontrar la mayor Problema del coloreado de grafos: Encontrar la mínima Problema del árbol de Steiner: Encontrar un árbol de coste Problemas de asignación: Dada una tabla de tareas y personas que pueden realizarlas (coste distinto), encontrar la

--- Página 23 ---


--- Página 24 ---


--- Página 25 ---
Ejemplo: Feature Selection

--- Página 26 ---
Ejemplo: Feature Selection

--- Página 27 ---
Ejemplo: Feature Selection Learning que use distancias (KNN). En vez de:

--- Página 28 ---
Metaheurísticas y Simulación

--- Página 29 ---


--- Página 30 ---


--- Página 31 ---


--- Página 32 ---


--- Página 33 ---
Diseño Aerodinámico Planificación de Rutas para Transporte de Mercancías Canalización automática Juegos Equilibrado de Líneas de Montaje en Nissan y otros Identificación Forense de Personas Desaparecidas

--- Página 34 ---
La disminución de la resistencia al avance es clave Se calcula resolviendo unas ecuaciones que simulan el comportamiento de un objeto sólido (el avión) en interacción con un fluido (el aire), según la Dinámica Computacional de Después se usan métodos de optimización para obtener la Los diseños prometedores mediante la simulación

--- Página 35 ---
Diseño Aerodinámico

--- Página 36 ---
En casos reales, cada ejecución puede requerir meses de Por ello, se han empleado los algoritmos evolutivos para esta Además, como optimizadores multiobjetivo, pueden optimizar varios criterios a la vez (velocidad, estabilidad o gasto de combustible, por ejemplo)

--- Página 37 ---
Hoy en día es difícil encontrar empresas que gestionen las El problema típico es diseñar las rutas más adecuadas de transporte/recogida de productos entre un almacén central y unos Su resolución de forma adecuada puede suponer ahorros muy

--- Página 38 ---
Los algoritmos de hormigas (AntRoute) son una herramienta

--- Página 39 ---
AntRoute planifica diariamente las rutas de reparto desde el supermercados, localizado en Suhr (AG), a toda Suiza Migros dispone de una flota de entre 150 y 200 vehículos con tres tamaños: camiones (capacidad de 17 palés), trailers (35 palés) y unidades tractoras (33 palés) Esto provoca restricciones de acceso a los almacenes de los supermercados, restricciones de uso de ciertas carreteras, Los repartos tienen de realizarse a horas específicas, todos ellos en un solo día (productos perecederos) y el último tiene que hacerse lo más lejos posible del almacén (servicios extra)

--- Página 40 ---
Por ejemplo, en un reparto de 52000 palés a 6800 clientes en un Los expertos de la empresa necesitaron tres horas Las soluciones de AntRoute fueron de mucha mejor calidad en aprovechamiento de los vehículos:

--- Página 41 ---
Trabajamos con empresa de ingeniería para optimizar canalización Se diseñó un modelo automático con criterios que había que

--- Página 42 ---
Problema real pero que se discretizó (ángulos fijos). Hablando con expertos, múltiples restricciones. Múltiples Objetivos: Reducir número de codos (cambios).

--- Página 43 ---
Aproximando cuadro

--- Página 44 ---
Optimizar una red para jugar

--- Página 45 ---


--- Página 46 ---
Objetivo: Crear mazos para Juego de

--- Página 47 ---
Aprendiendo a jugar

--- Página 48 ---
82 de victorias mejor solución. Segundo mejor sistema: 74 victorias competición.

--- Página 49 ---
La mayoría de los sistemas productivos actuales se basan en líneas de La producción de un ítem se divide en un conjunto de tareas que tienen Cada tarea necesita un tiempo dado (más un área de trabajo) y tiene El diseño (equilibrado) de la línea requiere agrupar de forma eficiente las

--- Página 50 ---
El parámetro clave es el tiempo de ciclo que indica el máximo tiempo Los objetivos del equilibrado son: agrupar las tareas en el menor número posible de estaciones de trabajo obtener la agrupación que minimiza el tiempo de ciclo

--- Página 51 ---
Los algoritmos de OCH se han aplicado con gran éxito al equilibrado de Trabajamos con la Cátedra Nissan de la UPC para resolver el problema Pathfinder:

--- Página 52 ---
Es un problema multiobjetivo con muchas restricciones fuertes y un espacio de búsqueda de gran dimensión: oportunidad para El objetivo es proporcionar al ingeniero de planta con diversas opciones de

--- Página 53 ---
Una solución a este problema (TSALBP) es una asociación de tareas a las A 20 C 12 A 16 C 11 A 24 C Hemos diseñado un algoritmo de Optimización de Colonias de Hormigas El rastro de feromona se asocia al par (tarea, estación)

--- Página 54 ---
Introducimos una filosofía multicolonia para obtener un mayor abanico de soluciones posibles: cada hormiga utiliza distintos umbrales de llenado Nuestra propuesta obtiene muy buenos resultados. El algoritmo de

--- Página 55 ---
Motor del Nissan Pathfinder: 747 piezas y 330 referencias en 6 versiones del motor diesel 378 operaciones de montaje (prueba rápida incluida) agrupadas en 79 operarios para un turno de 301 motores

--- Página 56 ---
TSALBP que mejora los resultados del algoritmo de OCH:

--- Página 57 ---


--- Página 58 ---
Distintos problemas de clasificación: médicos, plantas, Poyatos, J., Molina, D., Martinez, A. D., Del Ser, J., Herrera, F. (2023). EvoPruneDeepTL: An evolutionary pruning model for transfer learning based deep neural networks. Neural Networks, 158, 59-82.

--- Página 59 ---
Distintos problemas de clasificación: médicos, plantas, Mejora un 5 de acierto (83-88, 93-98, ). Poyatos, J., Molina, D., Martinez, A. D., Del Ser, J., Herrera, F. (2023). EvoPruneDeepTL: An evolutionary pruning model for transfer learning based deep neural networks. Neural Networks, 158, 59-82.

--- Página 60 ---
1.

--- Página 61 ---


--- Página 62 ---
La superposición craniofacial es una técnica de identificación forense basada en la comparación de un modelo del cráneo encontrado y una Proyectando uno sobre otro (solapamiento cráneo-cara), el antropólogo forense puede

--- Página 63 ---


--- Página 64 ---


--- Página 65 ---
craneofacial: obtener modelos 3D de cráneos (con algoritmos evolutivos, AEs) Diseño de métodos de registrado 3D/2D automáticos para el solapamiento cráneo-cara (con AEs y conjuntos fuzzy) en la decisión final de la identificación (con visión por ordenador y operadores fuzzy) Proyectos Plan Nacional IDI (2006-09, 2009-12, 2013-15, 2016-18, 19-21) y Excelencia Junta de Andalucía (2007-10, 2013-18, 2020-22). Patente MEPROCS (2012-14). Premios Internacionales

--- Página 66 ---
? ? Identificación {Positiva/negativa/ probable positiva/probable negativa/ indeterminada} ? RI 3D-2D: traslación,

--- Página 67 ---
Producto comercial: Skeleton-Id

--- Página 68 ---


--- Página 69 ---
Algoritmos Meméticos con codificación real para el modelado 3D de cráneos. Representación de una solución a este problema: Eje Eje Eje t t t Eje (Eje , Eje ,Eje )

--- Página 70 ---
Entrada: vistas 3D Reconstrucción

--- Página 71 ---
Registrado de Imágenes (RI) Evolutivo

--- Página 72 ---
Solución final: escenario original replicado mediante RI 3D-2D

--- Página 73 ---
Solución final: escenario original replicado mediante RI 3D-2D

--- Página 74 ---
(Algoritmo Evolutivo con Codificación Real) f f Evaluación f Rotación {60,(0,1,0)} Traslación {2, 0, 1} f

--- Página 75 ---
Distancias entre landmarks cráneo-cara. Los puntos no casan Nuestro método incorpora información de esas distancias para obtener

--- Página 76 ---
Area deviation error: 34.70 Area deviation error: 13.23

--- Página 77 ---
Area deviation error: 32.64 Area deviation error: 15.84

--- Página 78 ---
Distintos entornos y lenguajes: Matlab (mayoritario),

--- Página 79 ---
4. Software de Metaheurísticas

--- Página 80 ---
Ejemplo para distintos lenguajes (hay muchos más): Java: Jblas C: Eigen, Armadillo Python: Numpy Rust: ndarray Julia, Matlab, R: en el propio lenguaje

--- Página 81 ---
emplear el entorno/lenguaje que se desee.

--- Página 82 ---
emplear el entorno/lenguaje que se desee. ¿Puedo elegir? Lenguaje bajo nivel: (C,Java, Rust) adecuados pero mejor Python: Cuidado si no se conoce cómo optimizar la función de fitness (uso de numpy/numba). Matlab: no recomendada, software libre compatible (Octave) lento y errores. Julia: Falta de conocimiento/experiencia.

--- Página 83 ---
jMetal (Java) ó jMetalPy PlatEMO (Python) Algoritmos Multi-objetivo. Muchos algoritmos. Fácil de usar, problemas Matlab.

--- Página 84 ---
ECJ, Java Jenetics, Java Optaplanner, Java

--- Página 85 ---
Inspyred, Python Pyswarms, Python Mealpy, Python

--- Página 86 ---
JuMP, Julia Optimization, Julia Metaheuristics, Julia Evolutionary, Julia

--- Página 87 ---
ParaDisEO, C OptFrame, C Pagmo, C

