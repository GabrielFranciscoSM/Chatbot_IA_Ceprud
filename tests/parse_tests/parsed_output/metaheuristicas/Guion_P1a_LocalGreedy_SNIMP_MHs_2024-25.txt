--- Página 1 ---
En Redes Sociales (SNIMP)

--- Página 2 ---
(SNIMP) descrito en las transparencias del Seminario 2. Para ello, se requerirá que el estudiante adapte los siguientes algoritmos a dicho problema: Algoritmos de Búsqueda Local (BL). La práctica se evalúa sobre un total de 2 puntos, distribuidos de la siguiente forma: BL (1 puntos). Random (0.5 puntos). Greedy (0.5 puntos). La fecha límite de entrega será el el martes 1 de abril de 2025 antes de las 23:55 horas. La Sociales (SNIMP) Elproblemadela(eninglés,social network influece maximization problem,SNIMP)esunproblema deoptimizacióncombinatoriaconsistenteenseleccionarunsubconjuntoM dem elementos(Mm) de un conjunto inicial N de n elementos (con nm) de forma que se maximice el conjunto de nodos information. El SNIMP se puede formular como: S maxICM(G,S,p,ev) sS donde: ev es el número de iteraciones usadas en la simulación (usando una simulación de Montecarlo)

--- Página 3 ---
el modelo más simple, el modelo independiente (en inglés, Independent Cascade Model, ICM). Visualmente se puede mostrar el seudocódigo: en donde: A es el conjunto de nodos infectados sobre el que se inician los contagios/influencias. A es el total de nodos infectados. Portanto,elprocesoeselsiguiente:Partiendo de los nodos indicados en la solución, se inicia el algoritmo ICM usando p0.01 y env10. Dado que es un proceso no determinístico, los números aleatorios de la siguiente manera: Al principio se consultará el estado actual (semilla), luego se le asignará un valor concreto, como 35, y al terminar de Large Network Dataset Collection disponibles en  Tabla 1: Ficheros de redes usadas Nombre Nodo Enlaces web ca-GrQc 5242 14496  p2p-Gnutella05 8846 31839  p2p-Gnutella08 6301 20777  p2p-Gnutella25 22687 54705  En particular, se han usado un caso de autores en una revista online (General Relativity and Quantum Cosmology), y conexiones en una red social muy poco usada (Gnutella) en tres días

--- Página 4 ---
distintos (5, 8, y 25 de Agosto de 2002). La tabla 1 muestra sus características. total de evaluaciones se ha mantenido reducido que en otras prácticas (a 1000). El formato de los ficheros es el siguiente: Un par de líneas con comentarios iniciadas con . Una línea indicando el número de nodos y conexiones: Ejemplo: Nodes: 5242 Edges: 28980 La línea con el formato, todas en este caso siguen el mismo: FromNodeId ToNodeId por lo Líneas con los datos de conexión, indica primero el nodo de salida (numerado desde 0), un Ejemplo (ca-GrQc.txt) Directed graph (each unordered pair of nodes is saved once): CA-GrQc.txt Collaboration network of Arxiv General Relativity category (there is an edge Nodes: 5242 Edges: 28980 FromNodeId ToNodeId Formalmente se puede definir la función heurística de un nodo u (g(u)) como: g (u)d d vNu

--- Página 5 ---
en donde d(u)N y N {w V :(u,w)E} siendo E el conjunto de conexiones. conjunto de elementos seleccionados. Se empleará el movimiento de intercambio Int(Sel,i,j) que hará el recorrido del entorno de forma totalmente aleatoria. Se aplicarán dos criterios de parada: Hasta llegar a 1000 evaluaciones (LSall). Hasta llegar a 1000 evaluaciones, o sin mejoras en 20 evaluaciones (BLsmall). resultado medio (y a veces la desviación típica) de todas las ejecuciones para representar con mayor se obtengan números en una secuencia lo suficientemente grande (es decir, que no se repitan los números en un margen razonable) como para considerarse aleatoria. En el espacio de PRADO se puede encontrar una implementación en lenguaje C de un generador aleatorio de buena calidad (random.hpp). semillas deben mantenerse en los distintos algoritmos (es decir, la semilla para la primera ejecución

--- Página 6 ---
de la anterior, etc.). Por simplificar y facilitar la reproducibilidad, se usará la misma semilla para repetir el experimento y obtener los mismos resultados si fuera necesario (en caso contrario, los resultados podrían variar en cada ejecución del mismo algoritmo sobre el mismo caso del problema). de forma ordenada, y se generarán los números aleatorios de la siguiente manera: Al principio se consultará el estado actual (semilla), luego se le asignará un valor concreto, 35, y al terminar de de elementos seleccionados. Se diseñará una tabla para cada algoritmo (Greedy, LSall, LSsmall) Tabla 2: Formato de resultados para el Algoritmo X Conjunto Fitness Tiempo (segs) Evaluaciones en la tabla 3. Se incluirá su posición según el fitness (1 para el mejor, 2 para el segundo, ...). Tabla 3: Formato de resultados para el conjunto XXX Algoritmo Posición Fitness Tiempo (segs) Evaluaciones

--- Página 7 ---


--- Página 8 ---
construir los ejecutables según el entorno de desarrollo empleado (tales como .prj, makefile, .ide, etc.). En este directorio se adjuntará también un pequeño fichero de texto de nombre LEEME etiquetado con los apellidos y nombre del estudiante (Ej. Pérez Pérez Manuel.zip). Este fichero será algoritmo y su análisis. La inclusión de trabajo voluntario (desarrollo de variantes adicionales, algoritmo,análisisextendido,etc.)podrá incrementar la nota finalporencimadelapuntuación En caso de que el comportamiento del algoritmo en la versión implementada/ desarro- requeridas, se podría reducir hasta en un 50 la calificación del algoritmo correspon-

