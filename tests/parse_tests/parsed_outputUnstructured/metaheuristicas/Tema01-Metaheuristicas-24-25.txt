Tema 1. Introducción a las Metaheurísticas Tema 2. Modelos de Búsqueda: Entornos y Tema 3. Metaheurísticas Basadas en Poblaciones Tema 4: Algoritmos Meméticos Tema 5. Metaheurísticas Basadas en Trayectorias Tema 6. Metaheurísticas Basadas en Adaptación Social Tema 7. Aspectos Avanzados en Metaheurísticas Tema 8. Metaheurísticas Paralelas Tema 9. Modelos de IA Evolutivos. Aprendizaje Entender el concepto de metaheurísticas Conocer los elementos más importantes en el diseño Conocer diferentes criterios de clasificación de Múltiples problemas de optimización de ciencia, ingeniería, economía, etc. son complejos y difíciles de resolver No se pueden resolver de forma exacta en un tiempo La alternativa es el uso de algoritmos aproximados Tipos de algoritmos aproximados: Heurísticas: Dependientes del problema Metaheurísticas: Algoritmos aproximados más generales Resuelven problemas de forma más rápida Resuelven problemas más complejos Obtienen algoritmos más robustos Metaheurísticas: Optimización/búsqueda Intersección de campos: Inteligencia Artificial Teoría de Algoritmos, etc. Existen metaheurísticas que son metáforas naturales para resolver problemas: Evolución de especies Procesos físicos: enfriamiento de partículas, Sociedades de insectos: Colonias de hormigas, abejas, Comportamiento de especies, 3. Metaheurísticas: definición y clasificación 4. Metaheurísticas: Paralelización 5. Aplicaciones Ejemplo: El problema del viajante de comercio Representación como secuencia de ciudades (1 a n), n! soluciones  ¿Necesitamos una solución exacta o una Buena solución para el problema?  Complejidad algorítmica: Algoritmos en tiempo polinomial y no polinomial n5 n n n1000 n! ¡Necesitamos buenos algoritmos y eficientes! Algoritmos que proporcionen una buena solución en un tiempo razonable Existen problemas reales (de optimización o búsqueda) de difícil solución que requieren de tareas tales como encontrar: el camino más corto entre varios puntos, un plan de mínimo coste para repartir mercancías a una asignación óptima de trabajadores a tareas a realizar, una secuencia óptima de proceso de trabajos en una una distribución de tripulaciones de aviones con mínimo el mejor enrutamiento de un paquete de datos en Internet, ... Estos problemas se caracterizan porque: presentan una gran complejidad computacional (son NP- duros) los algoritmos exactos (Programación Dinámica, Backtracking, Branch and Bound, ...) son ineficientes o simplemente imposibles de aplicar, se encuentran en muchas áreas de aplicación, en la práctica se resuelven mediante algoritmos aproximados que proporcionan buenas soluciones (no necesariamente la óptima) al problema en un tiempo razonable Función objetivo Max (Min) una función con variables de decisión Subject to (s.t.) igualdad () restricciones desigualdad (,, , ) restricciones Espacio de búsqueda Valores de las variables de decisión que serán evaluados Ejemplo: El problema del viajante de comercio Es un problema muy estudiado al presentar aplicaciones reales tales como la fabricación en serie de tarjetas de ordenador (impresión de los buses de estaño) Ejercicio: Analizar el espacio de búsqueda ¿Cómo representar una solución al problema? Ejemplo: El problema del viajante de comercio Ejemplo: Viajante de Comercio Ejemplo: El problema del viajante de comercio Se utiliza para problemas donde la solución se representa como una permutación de 1, ..., N X (x1, ....., xn) xi {1, ..., N} Aplicaciones: Viajante de Comercio (TSP), Coloreo de Grafos, Secuenciación de tareas, QAP (asignación cuadrática), .... Ejemplo: El problema del viajante de comercio Ejemplo: Viajante de Comercio Representación de una solución: Camino (1 2 4 3 8 5 7 6) Ejemplo: El problema del viajante de comercio 1. Esquema de representación: Permutación de {1, ..., n}. 2. Función objetivo: ()1,1,)( 11SnSDiSiSDSCMinni 3. Metaheurísticas: definición y clasificación 4. Metaheurísticas: Paralelización 5. Aplicaciones N. Xiong, D. Molina, M. Leon-Ortiz, F. Herrera. A walkintoMetahueristicsforEngineering Optimization: Principles, Methodsand RecentTrends. International Journal of ComputationalIntelligentSystems(IJCIS), 8, 2015, 606-636. 3. Metaheurísticas: Definición Los algoritmos aproximados aportan soluciones cercanas a la óptima en problemas complejos (NP- duros) en un tiempo razonable Cuando no hay un método exacto de resolución, o éste requiere mucho tiempo de cálculo y memoria (ineficiente) Cuando no se necesita la solución óptima, basta con una de buena calidad en un tiempo aceptable 3. Metaheurísticas: Definición Ventajas: Algoritmos de propósito general Gran éxito en la práctica Fácilmente implementables Fácilmente paralelizables Inconvenientes: Son algoritmos aproximados, no exactos Son no determinísticos (probabilísticos) No siempre existe una base teórica establecida 3. Metaheurísticas: Taxonomía Una posible taxonomía: Basadas en métodos constructivos Basadas en trayectorias Basadas en poblaciones 3. Metaheurísticas: Taxonomía Una posible taxonomía: Basadas en métodos constructivos: (mecanismos para construir soluciones) GRASP, Optimización Basada en Colonias de Hormigas 3. Metaheurísticas: Taxonomía Una posible taxonomía: Basadas en métodos constructivos: GRASP, Optimización Basada en Colonias de Hormigas Basadas en trayectorias (la heurística subordinada es un algoritmo de búsqueda local que sigue una trayectoria en el espacio de búsqueda): Búsqueda Local, Enfriamiento Simulado, Búsqueda Tabú, BL Iterativa, ... )(0σN )(1σN )(2σN )(4σN Óptimo local/global )(3σN 3. Metaheurísticas: Taxonomía Una posible taxonomía: Basadas en métodos constructivos: GRASP, Optimización Basada en Colonias de Hormigas Basadas en trayectorias (la heurística subordinada es un algoritmo de búsqueda local que sigue una trayectoria en el espacio de búsqueda): Búsqueda Local, Enfriamiento Simulado, Búsqueda Tabú, BL Iterativa, ... Basadas en poblaciones (el proceso considera múltiples puntos de búsqueda en el espacio): Algoritmos Genéticos, Algoritmos Meméticos, Diferential Evolution, ... 3. Metaheurísticas: Definición 3. Metaheurísticas: Taxonomía Basadas en trayectorias 3. Metaheurísticas: Clasificación Basadas en poblaciones I am not at the top. My high is better! 3. Metaheurísticas: Clasificación Basadas en poblaciones  3. Metaheurísticas: definición y clasificación 4. Metaheurísticas: Paralelización 5. Aplicaciones 4. Metaheurísticas: Paralelización 3. Metaheurísticas: definición y clasificación 4. Metaheurísticas: Paralelización 5. Aplicaciones N. Xiong, D. Molina, M. Leon-Ortiz, F. Herrera. A walk into Metahueristics for Engineering Optimization: Principles, Methods and Recent Trends. International Journal of Computational Intelligent Systems (IJCIS), 8, 2015, 606-636. 5. Metaheurísticas: Aplicaciones Ejemplo Real: Diseño de antenas  Ejemplo Real: Organización de equipos médicos Ejemplo Real: Registrado de imágenes. Ejemplo Real: Registrado de imágenes. (Algoritmo Evolutivo) f f Evaluación f Rotación {60,(0,1,0)} Traslación {2, 0, 1} f Ejemplo Real: Registrado de imágenes. Ejemplo Real: Registrado de imágenes. Resultados usando métodos aprovechan la potencia del Soft Computing: Ejemplo Real: Registrado de imágenes. 3. Metaheurísticas: definición y clasificación 4. Metaheurísticas: Paralelización 5. Aplicaciones. Ejemplo de uso en el Viajante de Comercio 3. Metaheurísticas: Ej. (Alg. Basado en Poblaciones) Ejemplo: El problema del viajante de comercio Ejemplo: 17 ciudades (3 5 1 13 6 15 8 2 17 11 14 4 7 9 10 12 16) Ejemplo: El problema del viajante de comercio 17! (3.5568734e14) soluciones posibles Solución óptima: Coste226. Iteración: 0 Costo: 403. Iteración: 25 Costo: 303. Solución óptima: 226. Iteración: 25 Costo: 303. Iteración: 50 Costo: 293. Solución óptima: 226. Iteración: 50 Costo: 293. Iteración: 100 Costo: 256. Solución óptima: 226. Iteración: 100 Costo: 256. Iteración: 200 Costo: 231. Solución óptima: 226. Iteración: 200 Costo: 231. Iteración: 250 Solución óptima: 226. Ejemplo: El problema del viajante de comercio 532! soluciones posibles Coste solución óptima 27.686 millas Tema 1. Introducción a las Metaheurísticas Tema 2. Modelos de Búsqueda: Entornos y Tema 3. Metaheurísticas Basadas en Poblaciones Tema 4: Algoritmos Meméticos Tema 5. Metaheurísticas Basadas en Trayectorias Tema 6. Metaheurísticas Basadas en Adaptación Social Tema 7. Aspectos Avanzados en Metaheurísticas Tema 8. Metaheurísticas Paralelas Tema 9. Modelos de IA Evolutivos. Aprendizaje