Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables (Parte 1) Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Máquinas de Turing Lenguajes recursivamente enumerables. Lenguajes recursivos Técnicas de construcción de Máquinas de Turing: memoria adicional, pistas múltiples, subrutinas Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Entrada: un programa y unos datos de entrada Salida: SI (cuando el programa termina para esos datos) y NO (cuando el programa cicla de forma indeﬁnida para esos datos) Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables ¿Por qué es difícil saber si un programa termina? int exp ( int / calcula i a la potencia n / { i , n) int ans , j ; ans 1; for ( j 1; return ( ans ) ; jn ; j) ans i ; } main () { int n , scanf ("d",n ) ; t o t a l 3; while (1) { total , x , y , z ; for ( x1; xtotal 2; x) for ( y1; ytotal x1; y) { z total xy ; i f ( exp (x , n) exp (y , n) exp (z , n )) p r i n t f (" hola mundo" ) ; } t o t a l; } } Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables xn yn zn Ahora se sabe que no termina para n 2 según el último teorema de Fermat, pero hace algunos años esto no se sabía. El teorema fue enunciado en 1637, pero no fue demostrado hasta 1995 por el matemático Andrew Wiles Se han necesitado más de 300 años para saber si un programa concreto termina, pero nosotros queremos un algoritmo que nos diga si cualquier programa termina!! Este es un problema indecidible. La teoría para demostrar esto la haremos usando Máquinas de Turing. La podríamos hacer usando programas en C, pero las demostraciones matemáticas serían más complejas. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Una Máquina de Turing (MT) es una séptupla (Q,A,B,δ,q0,,F) en la que Q es un conjunto ﬁnito de estados A es un alfabeto de entrada B es el alfabeto de símbolos de la cinta que incluye a A δ es la función de transición que asigna a cada estado q Q y símbolo b B, el valor δ(q,b) que puede ser vacío (no deﬁnido) o una tripleta (p,c,M) donde p Q,c B,M {I,D} donde I indica izquierda y D indica derecha. q0 es el estado inicial es un símbolo de B A llamado símbolo blanco F es el conjunto de estados ﬁnales Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Consideremos la MT M ({q0,q1,q2,q3,q4},{0,1},{0,1,X,Y,},δ,q0,,{q4}) donde las transiciones no nulas son las siguientes: δ(q0,Y) (q3,Y,D) δ(q0,0) (q1,X,D) δ(q1,0) (q1,0,D) δ(q1,1) (q2,Y,I) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) 1 ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) Y ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) Y ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) Y ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) Y ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) Y ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) Y ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) Y ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,Y) (q3,Y,D) δ(q1,0) (q1,0,D) δ(q0,0) (q1,X,D) δ(q1,Y) (q1,Y,D) δ(q2,0) (q2,0,I) δ(q1,1) (q2,Y,I) δ(q2,X) (q0,X,D) δ(q2,Y) (q2,Y,I) δ(q3,Y) (q3,Y,D) δ(q3,) (q4,,D) Y ... Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Una conﬁguración de una Máquina de Turing es una tripleta (q,w1,w2) donde w1 es la representación de la parte de la palabra que hay a la izquierda de la posición del cabezal de lectura (puede ser vacío). Esta representación se obtiene eliminando la sucesión inﬁnita de blancos a la izquierda de las casillas que son distinto de blanco. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Conﬁguración Inicial Si u A, la conﬁguración inicial de la Máquina de Turing (Q,A,C,δ,q0,,F) asociada a esta palabra es (q0,ε,u), siendo (q0,ε,) si u ε. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Paso de Cálculo (movimiento a la izquierda) Si δ(q,a) (p,b,I) entonces decimos que de la conﬁguración (q,c1...cn,ad2...dm) llegamos en un paso de cálculo a la conﬁguración (p,c1...cn1,cnbd2...dm) lo que se denota como (q,c1...cn,ad2...dm) (p,c1...cn1,cnbd3...dm) donde se supone: Si c1...cn ε, entonces c1...cn1 ε y cn . Se eliminan los blancos a la derecha de la palabra cnbd3...dm excepto el primero si toda la palabra está formada por blancos. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Paso de Cálculo (movimiento a la derecha) Si δ(q,a) (p,b,D) entonces decimos que de la conﬁguración (q,c1...cn,ad2...dm) llegamos en un paso de cálculo a la conﬁguración (p,c1...cnb,d2d3...dm) lo que se denota como (q,c1...cn,ad2...dm) (p,c1...cnb,d2d3...dm) donde se considera: Si m 1 entonces d2d3...dm Se eliminan todos los blancos a la izquierda en c1...cnb. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Relación de pasos de cálculo Si R y R son conﬁguraciones de una máquina de Turing M (Q,A,C,δ,q0,,F), se dice que desde R se llega en una suceción de pasos de cálculo a R lo que se denota como R R si y solo si existe una sucesión ﬁnita de conﬁguraciones R1,...,Rn tal que R R1, R Rn y Ri Ri1,i n. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Lenguaje aceptado por una Máquina de Turing Si M es una máquina de Turing, entonces el lenguaje aceptado es el conjunto de palabras L(M) tales que u L(M) si y solo si existen w1,w2 B y q F tales que (q0,ε,u) la conﬁguración inicial asociada a u se puede llegar mediante una sucesión de pasos de cálculo a una conﬁguración en la que estamos en un estado ﬁnal). (q,w1,w2) (es decir desde Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Deﬁnición: Recursivamente Enumerable Un lenguaje L A se dice recursivamente enumerable (e.r.) si y solo si existe una máquina de Turing M (Q,A,C,δ,q0,,F) tal que L(M) L. Una máquina para cuando en el estado actual y símbolo de la cinta no hay ninguna transición deﬁnida. Cuando se llega a un estado ﬁnal q F podemos suponer que la Máquina de Turing para, es decir no hay ninguna transición deﬁnida. Existe otro criterio de aceptación: una palabra es aceptada cuando la MT para. La clase de lenguajes aceptada por este criterio es también la clase de los lenguajes recursivamente enumerables. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Si una MT llega a un estado de aceptación, ya acepta la palabra de entrada, con independencia de lo que haga después. Luego ese cálculo es irrelevante y la MT acepta el mismo lenguaje si no sigue calculando. Por ese motivo, nosotros supondremos que los estados de aceptación no tienen transiciones salientes y las MTs siempre terminan cuando llegan a un estado de aceptación. Una MT puede no aceptar una palabra de dos formas distintas: Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Deﬁnición Un lenguaje se dice recursivo si es aceptado por una MT que siempre termina: todas las palabras son aceptadas o rechazadas. Un lenguaje recursivo es siempre recursivamente enumerable. Los lenguajes recursivos son aquellos cuyo problema de aceptación pueder ser resuelto mediante un algoritmo. En el caso de lenguajes recursivos, podemos suponer que hay dos tipos de estados ﬁnales: de aceptación y de rechazo. La máquina acepta cuando se llega a un estado de aceptación y rechaza cuando llega a un estado de rechazo. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Deﬁnición Dada una MT M (Q,A,B,δ,q0,,F), la función f calculada por esta MT es una función f : D B tal que D A es el conjunto de entradas para los que la MT termina y si u D, entonces f (u) es el contenido de la cinta cuando la MT termina excluyendo los símbolos en blanco. Funciones Calculables Totales Si una función es parcialmente calculable y D A (la MT termina en todas las entradas) se dice que es calculable total. Serafín Moral Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Ejemplo: restar números en unario Vamos a diseñar una MT que resta números en unario. Para dos números naturales n,m N calcula f (n,m) que es igual a nm si n m y 0 si n m. La entrada debe de ser 0n10m y la salida debe de ser una conﬁración en la que en la cinta esté 0f (n,m) rodeado de blancos. No nos preocupa cual es la salida si la entrada no es correcta (no corresponde a dos series de ceros separadas por un 1). La MT será M ({{q0,q1,q2,q3,q4,q5,q6},{0,1},{0,1,},δ,q0,,q6) Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Restar números en unario: función de transición δ viene dada por la siguiente tabla: Estado q0 q1 q2 q3 q4 q5 q6 0 (q1,,D) (q1,0,D) (q3,1,I) (q3,0,I) (q4,0,I) (q5,,D) 1 (q5,,D) (q2,1,D) (q2,1,D) (q3,1,I) (q4,,I) (q5,,D) (q4,,I) (q0,,D) (q6,0,D) (q6,,D) Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Restar números en unario: función de transición δ viene dada por la siguiente tabla: Estado q0 q1 q2 q3 q4 q5 q6 0 (q1,,D) (q1,0,D) (q3,1,I) (q3,0,I) (q4,0,I) (q5,,D) 1 (q5,,D) (q2,1,D) (q2,1,D) (q3,1,I) (q4,,I) (q5,,D) (q4,,I) (q0,,D) (q6,0,D) (q6,,D) En q2 se mueve a la derecha saltando 1s hasta que encuentra un 0 y entonces empieza a moverse a la izquierda hasta encontrar un blanco, entonces se mueve a la derecha y empieza de nuevo en q0. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Restar números en unario: función de transición δ viene dada por la siguiente tabla: Estado q0 q1 q2 q3 q4 q5 q6 0 (q1,,D) (q1,0,D) (q3,1,I) (q3,0,I) (q4,0,I) (q5,,D) 1 (q5,,D) (q2,1,D) (q2,1,D) (q3,1,I) (q4,,I) (q5,,D) (q4,,I) (q0,,D) (q6,0,D) (q6,,D) El proceso se repite: si al volver a q0 lo que encuentra es un 1, entonces es que m n y el resultado es la cadena vacía que representa a 0, para ello pasa a q5 donde borra todo. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Restar números en unario: función de transición δ viene dada por la siguiente tabla: Estado q0 q1 q2 q3 q4 q5 q6 0 (q1,,D) (q1,0,D) (q3,1,I) (q3,0,I) (q4,0,I) (q5,,D) 1 (q5,,D) (q2,1,D) (q2,1,D) (q3,1,I) (q4,,I) (q5,,D) (q4,,I) (q0,,D) (q6,0,D) (q6,,D) Si en q2 no encuentra 0, es que n m y hemos borrado un 0 de más, se pasa a q4 en el nos movemos a la izquierda borrando los 1s y añadiendo un 0 (cuando se llega a ) y se pasa al estado ﬁnal. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Diseñar máquinas de Turing para los siguientes lenguajes: Palabras sobre el alfabeto {0,1} con el mismo número de ceros que de unos. L {anbncnn 1} {ww1w {0,1}} {wcw w {0,1}} Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Programación de Máquinas de Turing: recordando símbolos Una MT puede diseñarse para que recuerde un símbolo del alfabeto de trabajo (o del alfabeto de entrada). Por ejemplo, si queremos que se recuerde un símbolo de B cuando está en el estado q, entonces basta con cambiar el estado q por las parejas de estados [q,b] donde b B. A menudo queremos que se recuerde un símbolo en cualquier estado y entonces el conjunto de estados sería el conjunto de las parejas QB formadas por un elemento q Q y un símbolo b B. Podemos considerar que un estado es [q,b] donde q es el estado básico y b el símbolo recordado. Escribir los estados de esta forma ayuda a comprender el signiﬁcado de los mismos y se usa para describir las MT sin llegar al detalle de las transiciones. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Vamos a hacer una máquina de Turing que reconozca el lenguaje 0110: la Máquina tiene que recordar el primer símbolo leído y después comprobar que nunca más aparezca. La Máquina es M (Q,{0,1},{0,1,},δ,[q0,],{[q1,]}) donde Q {q0,q1}{0,1,} Las posibles transiciones de δ son: 1 δ([q0,],a) ([q1,a],a,D) para a 0 o a 1. 2 δ([q1,a],a) ([q1,a],a,D), donde a es el complementario de a (esto es, a 1 si a 0 y a 0 si a 1). 3 δ([q1,a],) ([q1,],,D) Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Programación de Máquinas de Turing: pistas múltiples A menudo es útil pensar que la MT tiene una cinta con varias pistas: en lugar de tener una sola casilla, disponemos de varias casillas en cada posición donde poder escribir un símbolo. Tener dos pistas equivale a suponer que el alfabeto de trabajo está formado por los elementos de B B y tener k cintas a suponer que el alfabeto de trabajo es Bk. Se supone que un símbolo a A se identiﬁca con (a,,...,). Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Una forma de utilizar las pistas múltiples es imaginar que una pista se usa para los datos y otra para poner una marca. Vamos a diseñar una MT que acepte el lenguaje L {wcw w {0,1}}. La MT tiene los siguientes elementos M (Q,A,B,δ,[q1,],[,],{[q9,]}) donde Q {q1,q2,...,q9}{0,1} (podemos recordar 0,1. B {0,1,c,}{,} A {0,1,c}. 0 se identiﬁca con [0,] y 1 se identiﬁca con [1,] La función de transición δ se especiﬁca en la siguiente pantalla. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Ejemplo: Función de Transición δ([q1,],[a,]) ([q2,a],[a,],D) δ([q2,a],[c,]) ([q3,a],[c,],D) δ([q3,a],[a,]) ([q4,],[a,],I) δ([q4,],[c,]) ([q5,],[c,],I) δ([q6,],[a,]) ([q6,],[a,],I) δ([q5,],[a,]) ([q7,],[a,],D) δ([q8,],[a,]) ([q8,],[a,],D) δ([q2,a],[b,]) ([q2,a],[b,],D) δ([q3,a],[b,]) ([q3,a],[b,],D) δ([q4,],[a,]) ([q4,],[a,],I) δ([q5,],[a,]) ([q6,],[a,],I) δ([q6,],[a,]) ([q1,],[a,],D) δ([q7,],[c,]) ([q8,],[c,],D) δ([q8,],[,]) ([q9,],[,],D) Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Ejemplo: Función de Transición δ([q1,],[a,]) ([q2,a],[a,],D) δ([q2,a],[c,]) ([q3,a],[c,],D) δ([q3,a],[a,]) ([q4,],[a,],I) δ([q4,],[c,]) ([q5,],[c,],I) δ([q6,],[a,]) ([q6,],[a,],I) δ([q5,],[a,]) ([q7,],[a,],D) δ([q8,],[a,]) ([q8,],[a,],D) δ([q2,a],[b,]) ([q2,a],[b,],D) δ([q3,a],[b,]) ([q3,a],[b,],D) δ([q4,],[a,]) ([q4,],[a,],I) δ([q5,],[a,]) ([q6,],[a,],I) δ([q6,],[a,]) ([q1,],[a,],D) δ([q7,],[c,]) ([q8,],[c,],D) δ([q8,],[,]) ([q9,],[,],D) Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Ejemplo: Función de Transición δ([q1,],[a,]) ([q2,a],[a,],D) δ([q2,a],[c,]) ([q3,a],[c,],D) δ([q3,a],[a,]) ([q4,],[a,],I) δ([q4,],[c,]) ([q5,],[c,],I) δ([q6,],[a,]) ([q6,],[a,],I) δ([q5,],[a,]) ([q7,],[a,],D) δ([q8,],[a,]) ([q8,],[a,],D) δ([q2,a],[b,]) ([q2,a],[b,],D) δ([q3,a],[b,]) ([q3,a],[b,],D) δ([q4,],[a,]) ([q4,],[a,],I) δ([q5,],[a,]) ([q6,],[a,],I) δ([q6,],[a,]) ([q1,],[a,],D) δ([q7,],[c,]) ([q8,],[c,],D) δ([q8,],[,]) ([q9,],[,],D) Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Ejemplo: Función de Transición δ([q1,],[a,]) ([q2,a],[a,],D) δ([q2,a],[c,]) ([q3,a],[c,],D) δ([q3,a],[a,]) ([q4,],[a,],I) δ([q4,],[c,]) ([q5,],[c,],I) δ([q6,],[a,]) ([q6,],[a,],I) δ([q5,],[a,]) ([q7,],[a,],D) δ([q8,],[a,]) ([q8,],[a,],D) δ([q2,a],[b,]) ([q2,a],[b,],D) δ([q3,a],[b,]) ([q3,a],[b,],D) δ([q4,],[a,]) ([q4,],[a,],I) δ([q5,],[a,]) ([q6,],[a,],I) δ([q6,],[a,]) ([q1,],[a,],D) δ([q7,],[c,]) ([q8,],[c,],D) δ([q8,],[,]) ([q9,],[,],D) Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Ejemplo: Función de Transición δ([q1,],[a,]) ([q2,a],[a,],D) δ([q2,a],[c,]) ([q3,a],[c,],D) δ([q3,a],[a,]) ([q4,],[a,],I) δ([q4,],[c,]) ([q5,],[c,],I) δ([q6,],[a,]) ([q6,],[a,],I) δ([q5,],[a,]) ([q7,],[a,],D) δ([q8,],[a,]) ([q8,],[a,],D) δ([q2,a],[b,]) ([q2,a],[b,],D) δ([q3,a],[b,]) ([q3,a],[b,],D) δ([q4,],[a,]) ([q4,],[a,],I) δ([q5,],[a,]) ([q6,],[a,],I) δ([q6,],[a,]) ([q1,],[a,],D) δ([q7,],[c,]) ([q8,],[c,],D) δ([q8,],[,]) ([q9,],[,],D) Si en q5 encontramos un símbolo marcado es que hemos terminado de analizar w, ahora nos queda comprobar que no quedan símbolos no marcados a la derecha (con estados q7 y q8) Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Vamos a diseñar una MT que multiplique números en binario escritos en base 1: la MT comenzará con una cadena de la forma 0m10n en la cinta, y terminará con 0mn al ﬁnal. No nos preocupamos se la MT tienen una entrada mal escrita. Finalizará con algo en la cinta que no tendrá sentido, en general. En etapas sucesivas, la cinta va a contener cadenas de la forma 0i10n10kn donde i k m para valores de k 1,...,m. En un paso básico se cambia el primer cero del primer grupo por un blanco y se añaden n ceros al último grupo: se pasa de 0i10n10kn a 0i110n10(k1)n. Finalmente la subcadena 10n1 del principio se sustituye por blancos. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Ejemplo: Subrutina Vamos a diseñar un conjunto de estados que copia n ceros al ﬁnal de la cinta cuando está situada justo al principio de la serie de n ceros. Termina en la misma posición de la cinta en el estado q5. Tiene los siguientes estados y estructura: δ(q1,0) (q2,X,D) δ(q2,0) (q2,0,D) δ(q2,) (q3,0,I) δ(q3,0) (q3,0,I) δ(q3,1) (q3,1,I) δ(q3,X) (q1,X,D) δ(q1,1) (q4,1,I) δ(q4,1) (q5,1,D) δ(q4,X) (q4,0,I) δ(q2,1) (q2,1,D) Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ(q0,1) (q0,1,D) δ(q0,0) (q0,0,D) δ(q0,) (q13,1,I) δ(q13,0) (q13,0,I) δ(q13,1) (q13,1,I) δ(q13,) (q14,,D) Miramos si hay un 0 al principio, lo sustituimos por un blanco, , y nos ponemos en situación para copiar n ceros al ﬁnal. δ(q14,0) (q6,,D) δ(q6,0) (q6,0,D) δ(q6,1) (q1,1,D) Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Estructura del Programa (II) Después de hacer la copia, estamos en q5 y desde este estado, volvemos a la posición inicial si hay más 0 en la primera serie o ﬁnalizamos si ya no hay más ceros (q12 es el estado ﬁnal de parada): δ(q5,0) (q7,0,I) δ(q8,0) (q9,0,I) δ(q9,0) (q9,0,I) δ(q10,1) (q11,,D) δ(q11,0) (q11,,D) δ(q11,1) (q12,,D) δ(q7,1) (q8,1,I) δ(q8,) (q10,,D) δ(q9,) (q14,,D) Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Se puede pedir descripción detallada o algorítmica. En el primer caso: 1 Dar una idea global del funcionamiento de la MT 2 Se dan las instrucciones concretas de la MT, pero agrupando las instrucciones por grupos, e indicando que acción realiza cada grupo. En el caso caso dar una descripción global como un algoritmo, describiendo acciones que se sabe que se pueden traducir en transiciones. Por ejemplo: Moverse a la derecha hasta encontrar un blanco Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Extensiones: MT que se pueden quedar en la misma posición en un paso: no es necesario moverse a la izquierda o derecha y pueden quedarse en el mismo sitio (S). MT con múltiples cintas: hay distintas cintas en las que se puede leer o escibir y una cabeza de lectura para cada una de ellas. MT no deterministas: hay distintas transiciones que puede realizar una MT en una conﬁguración dada. Limitaciones: MT con cintas semiilimitadas: la cinta de la MT es ilimitada sólo por la derecha y en la izquierda tiene un tope. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables En estas MT se supondrá que δ(q,b) puede ser vacío (no deﬁnido) o una tripleta (p,c,M) donde p Q,c B,M {I,D,S}. El símbolo S indica que el cabezal de lectura no se mueve en ninguna dirección y permanece en el mismo sitio. Esto no supone ninguna potencialidad adicional, ya que si δ(q,b) (p,c,S), esto lo podemos simular con un nuevo estado rp por cada estado p de la MT con estos movimientos haciendo, δ(q,b) (rp,c,D) y desde todos los estados rp lo único que se puede hader es movernos a la izquierda: δ(rp,d) (p,d,I) para todo estado rp y todo símbolo d de B. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables En estas MTs suponemos que existen k cintas ilimitadas en las que leer y escribir. Las diferencias entre múltiples pistas y múltiples cintas son: Múltiples pistas no supone una modiﬁcación de la deﬁnición de MT, simplemente es una forma de visualizar la cinta de una MT en la que el alfabeto de trabajo es un producto cartesiano B BB, es decir cada símbolo está formado por una pareja de símbolos básicos. El tener múltiples cintas si implicará una modiﬁcación de la deﬁnición. Ahora a cada (q,b1,...,bk), δ le podrá asignar un vector (p,c1,...,ck,M1,...,Mk). Cuando hay múltiples cintas, el cabezal de lectura podrá estar en una posición distinta en cada cinta. Por eso hay que especiﬁcar qué movimiento Mi hay que realizar en cada cinta i, además de lo que se ve en cada cinta bi y lo que se escribe en cada una ci. Suponemos que el movimiento de cada cinta puede ser {I,D,S}. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Conﬁguración Será un vector (q,u1,w1,u2,w2,...,uk,wk), donde q es el estado en el que está la MT, ui es la parte de la palabra que hay a la izquierda del cabezal de lectura de la cinta i y wi la parte de la palabra que hay en la cinta i a partir del cabezal de lectura de esa cinta hacia la derecha (incluyendo el símbolo que se lee en ese momento). Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Conﬁguración Será un vector (q,u1,w1,u2,w2,...,uk,wk), donde q es el estado en el que está la MT, ui es la parte de la palabra que hay a la izquierda del cabezal de lectura de la cinta i y wi la parte de la palabra que hay en la cinta i a partir del cabezal de lectura de esa cinta hacia la derecha (incluyendo el símbolo que se lee en ese momento). Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Función Calculada La función parcial f calculada por una MT es la función deﬁnida en todas las entradas en las que la MT termina. Si u A es una entrada para la que la MT termina, entonces lo hace con f (u) como contenido de la última cinta excluyendo los blancos. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables La MT N tendrá una cinta con 2k pistas. En cada par de pistas se simula una cinta de M. En una de las pistas se coloca un símbolo especial en el lugar en el que se encuentre el cabezal de la MT de k pistas, en la otra pista se coloca el contenido de la cinta de M. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Equivalencia (Cont.) La MT N almacena en la unidad de control los k símbolos que contiene M. Para ello comienza a revisar la cinta de izquierda a derecha y cada vez que encuentra un símbolo lo almacena en su correspondiente lugar de la unidad de control. Lleva un contador donde empieza en 0 y se aumenta en 1 cada vez que encuentra un símbolo hasta llegar a k (el valor de k es ﬁjo y se puede almacenar). Una vez hecho esto, tiene todos los elementos para realizar la transición de la MT de k cintas, para ello se va colocando en cada una de las posiciones señaladas de cada una de las cintas y realiza la transición correspondiente, escribiendo el símbolo que corresponda y moviendo la señal de posición del cabezal de lectura. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Equivalencia (Cont.) La MT N almacena en la unidad de control los k símbolos que contiene M. Para ello comienza a revisar la cinta de izquierda a derecha y cada vez que encuentra un símbolo lo almacena en su correspondiente lugar de la unidad de control. Lleva un contador donde empieza en 0 y se aumenta en 1 cada vez que encuentra un símbolo hasta llegar a k (el valor de k es ﬁjo y se puede almacenar). Una vez hecho esto, tiene todos los elementos para realizar la transición de la MT de k cintas, para ello se va colocando en cada una de las posiciones señaladas de cada una de las cintas y realiza la transición correspondiente, escribiendo el símbolo que corresponda y moviendo la señal de posición del cabezal de lectura. Los estados de aceptación de N son aquellos estados que corresponden a los estados de aceptación de M. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Simulación: complejidad en tiempo Teorema Si la MT M del teorema anterior emplea un número de pasos inferior o igual a t(n) para una entrada de longitud n, entonces la MT N de una cinta emplean un número de pasos de orden O(t2(n)). Para la demostración, basta tener en cuenta: Después de t(n) movimientos de la MT M la diferencia entre las posiciones de los distintos cabezales de lectura es, a lo más, 2t(n). Al principio podemos suponer que todos están en la misma posición y, en cada paso, se alejan a lo más en dos posiciones (si dos cabezales se mueven en distintas direcciones). Para ver los contenidos de las distintas casillas en las cintas en la máquina N nos hacen falta 2t(n) pasos como máximo. Ahora nos movemos de derecha a izquierda y cada vez que encontramos un marcador de posicionamiento, realizamos la transición correspondiente. Esta transición, a lo más, necesita 2 movimientos (para llevarlo a cabo y volver a la posición en la que estábamos). Esto implica 2t(n)2k movimientos. Si le sumamos a los 2t(n) iniciales, hacen 4t(n)2k por cada movimiento, así que los t(n) movimientos implicarán como máximo t(n)(4t(n)2k) que es de orden O(t2(n)), teniendo en cuenta que k es constante. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Una Máquinas de Turing No Determinista (MTND) tiene la misma deﬁnición que una MT con la única diferencia que ahora δ(q,a) puede ser un conjunto ﬁnito de tripletas {(q1,b1,M1),...,(qk,bk,Mk)} El cálculo asociado a una MTND se deﬁne de forma similar a una MT. Ahora en una conﬁguración en la que está en el estado q y ve a en la cinta puede evolucionar con cualquiera de las tripletas (qi,bi,Mi): puede ir a qi escribir bi y hacer el movimiento Mi para i 1,...,k. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Utilizamos una MT con dos cintas. En la primera tenemos una suceción de conﬁguraciones (q,u,v) separadas por un símbolo (cid:3), también existe una marca en la conﬁguración activa. Inicialmente hay sólo una conﬁguración: la conﬁguración inicial. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Equivalencia (Cont.) Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Ejemplo de MT para saber si un número binario es compuesto (no es primo) Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Número de Pasos (tiempo) en MT En una MT el número de pasos (tiempo) para una entrada u es el número de pasos de cálculo entre la conﬁguración de entrada y la última conﬁguración. Una MT tiene complejidad t(n) en tiempo si para toda entrada de longitud n la MT termina en t(n) o menos pasos. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Número de Pasos (tiempo) en MTND En una MTND el número de pasos (tiempo) para una entrada u es el número de pasos para el cálculo más largo posible para esa entrada. Si hay una secuencia de cálculos que no termina, entonces el tiempo es inﬁnito. Si decimos que una MTND tiene complejidad t(n) en tiempo, quiere decir que todos los posibles cálculos de la MTND terminan en t(n) o menos pasos donde n es la longitud de la entrada. Si una MTND tiene complejidad t(n), veremos (estudio de la complejidad algorítmica) que la MT que la simula tiene complejidad O(dt(n)) donde d es una constante mayor que uno. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Teorema Todo lenguaje aceptado por una MT M2 es también aceptado por una MT M1 con las siguientes restricciones: 1 M1 nunca escribe el espacio en blanco La primera condición es muy fácil de conseguir añadiendo un nuevo símbolo a M1 que es otro espacio en blanco . Si M2 escribe un espacio en blanco δ2(q,a) (p,,M), entonces M1 escribe el nuevo blanco: δ1(q,a) (p,,M). Después, cada transición δ1(q,) se hace idéntica a δ2(q,). Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Para la segunda condición, una cinta ilimitada por ambos extremos se simula con una cinta ilimitada sólo por la derecha con dos pistas y la siguiente estructura: X1 X Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Si M2 (Q2,A,B2,δ2,q2,,F2) entonces M1 (Q1,A{},B1,δ1,q0,[,],F1) donde Los estados de M1 son {q0,q1}(Q2{S,I}). Los estados q0 y q1 sirven para preparan la cinta de entrada (por ejemplo, poner el tope en la pista inferior). En los otros estados tenemos que especiﬁcar el valor S (pista superior) o I (pista inferior) además del estado. Los símbolos de trabajo de M1 son B2B2, es decir todas las parejas de símbolos de trabajo de M2. Cada símbolo a A2 de M2 se identiﬁca con el símbolo [a,] de M1. Además en B1 están todas las parejas [b,] donde b B2. Este símbolo se usa como tope para saber que estamos en el extremo izquierdo de la cinta. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables δ1(q0,[a,]) (q1,[a,],D) para cualquier a B2 δ1(q1,[a,]) ([q2,S],[a,],I) (nos movemos a la izquierda y decimos que estamos arriba) Si δ2(q,a) (p,b,M), entonces para todo c B2 1 δ1([q,S],[a,c]) ([p,S],[b,c],M) 2 δ1([q,I],[c,a]) ([p,I],[c,b],M), donde M es el movimiento Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Si δ2(q,a) (p,b,D) entonces δ1([q,I],[a,]) δ1([q,S],[a,]) ([p,S],[b,],D) Si estamos al principio de la cinta, siempre se supone que el símbolo activo es el superior. Allí se escribe y si nos movemos a la derecha el superior es el activo. Si δ2(q,a) (p,b,I) entonces δ1([q,I],[a,]) δ1([q,S],[a,]) ([p,I],[b,],D) Si estamos al principio de la cinta, siempre se supone que el símbolo activo es el superior. Allí se escribe y si nos movemos a la izquierda el infererior es el activo. Los estados de aceptación F1 de M1 es el conjunto de estados F2{S,I}. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables Cuando usamos cintas semiilimitadas, supondremos desde el principio que tenemos el símbolo a la izquierda de cada una de las cintas que se usen y que si se llega a ese símbolo inmediatamente nos vamos hacia la derecha en el próximo movimiento. Esto no supone ninguna limitación, ya que toda MT se puede simular con una con estas restricciones: siempre podemos incluir ese símbolo al principio de la palabra de entrada, desplazando todos los símbolos una casilla a la derecha y después como hemos visto siempre se puede simular la MT con una de cintas semiilimitadas en las que nunca se pasa a la izquierda de la palabra de entrada. Tema 1: Máquinas de Turing. Funciones y Lenguajes Calculables